{"version":3,"sources":["assets/StartingBackground.png","assets/egg.png","assets/baby.png","assets/toddler.png","assets/teen.png","assets/adult.png","components/LoginHome.js","fetch/params.js","fetch/generalFetch.js","components/Error.js","components/history.js","components/Signup.js","components/Login.js","components/Mood.js","components/Image.js","components/Pet.js","components/Reflection.js","components/Journal.js","components/Logout.js","components/NavBar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","CenterStyle","alignItems","alignContent","justifyContent","display","LoginHomeStyle","loggedIn","margin","padding","color","textDecoration","backgroundColor","outline","SignUpHomeStyle","CompStyle","flexDirection","LoginHome","url","style","to","pathname","getHeader","Accept","sessionStorage","getItem","getGETParams","getPOSTParams","post","JSON","stringify","getPATCHParams","patch","getDELETEParams","makeNewPost","a","res","fetch","json","getObject","toPatch","deleteObject","errorStyle","fontSize","ErrorMessage","msg","replace","history","createHashHistory","forceRefresh","signUpStyle","alignSelf","reqStyle","fontWeight","submitSignUp","postUrl","name","email","password","signUpDetails","signUp","SignUpForm","React","memo","setLoggedIn","useState","setName","setEmail","setPassword","displayError","setDisplayError","error","setError","type","onChange","e","target","value","Error","onClick","preventDefault","user","setItem","push","loginStyle","submitLogin","loginDetails","login","LoginForm","moodStyle","overflow","moodSlider","position","submitMood","id","scale","comments","newMood","mood","newPost","_id","MoodForm","moodUrl","setUserChange","setScale","com","setCom","setID","MoodInput","text1","title","newID","random","Math","toString","substring","goBack","min","max","ViewMood","date","dateCreated","des","ViewMoods","moods","setMoods","getMoods","useEffect","console","log","map","key","Image","src","alt","width","height","petStates","egg","baby","toddler","teen","adult","petStyle","textAlign","infoStyle","imageStyle","visibility","imageHeight","floor","window","innerHeight","differenceInDays","day1","day2","date1","Date","date2","days","round","abs","Number","isInteger","submitPetName","setChange","newName","newPet","submitPetFood","food","feed","ViewPet","petUrl","status","setStatus","level","setLevel","health","setHealth","setDays","foodToLevelUp","setFoodToLevelUp","overallFoodIntake","setOverallFoodIntake","foodNextLevel","setFoodNextLevel","setNewName","setPet","reqData","setReqData","setFeed","getPet","pet","born","foodRequiredToLevelUp","now","pattern","ViewPetSimple","reflectionStyle","textBoxStyle","submitReflection","event","learnt","scaleB","scaleD","scaleA","comB","comD","comA","eva","ana","act","con","extended","newEntryDetails","description","moodBefore","moodDuring","moodAfter","commentsBefore","commentsDuring","commentsAfter","evaluation","actions","actionPlan","conclusion","deleteReflection","result","Array","isArray","ReflectionInput","reflectionUrl","reflection","setEvent","setDes","setLearnt","moodB","setMoodB","moodD","setMoodD","moodA","setMoodA","setComB","setComD","setComA","setAna","setCon","setEva","setAct","reflectionId","useParams","feelings","analysis","getReflection","err","placeholder","ViewReflection","useLocation","setDate","path","component","ViewReflectionSimple","exact","ViewReflections","reflections","setReflections","getReflections","journalStyle","submitJournal","entry","positives","deleteJournal","JournalInput","journalUrl","journal","setTitle","setEntry","setPositives","setMood","journalId","getJournal","ViewJournal","params","comm","setComm","journalObject","ViewJournalSimple","ViewJournals","journals","setJournals","getJournals","logout","loggedout","Logout","removeItem","PetStyle","JournalStyle","ReflectionStyle","MoodStyle","NavStyle","DisplayStyle","BoxStyle","TitleStyle","ComponentStyle","QuoteStyle","quote","NavBar","points","setPoints","change","author","quoteAvailable","getUserDetails","remainingPoints","backgroundImage","background","backgroundPosition","backgroundSize","backgroundRepeat","opacity","header_style","columnStyle","unauthorisedStyle","authorisedStyle","App","loggedInPath","Login","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.b6f324f4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/StartingBackground.6cb4e8f9.png\";","module.exports = __webpack_public_path__ + \"static/media/egg.2b73145f.png\";","module.exports = __webpack_public_path__ + \"static/media/baby.54153fc8.png\";","module.exports = __webpack_public_path__ + \"static/media/toddler.23e805ae.png\";","module.exports = __webpack_public_path__ + \"static/media/teen.6275f614.png\";","module.exports = __webpack_public_path__ + \"static/media/adult.5327aaaa.png\";","import { Link } from 'react-router-dom';\nimport React from 'react';\n\nconst CenterStyle = {\n  alignItems:'center',\n  alignContent:'center',\n  justifyContent:'center',\n  display:'flex',\n}\n\nconst LoginHomeStyle = (loggedIn) => {\n  var display = \"block\"\n  if (loggedIn === false) {\n      display = \"none\"\n  }\n  return ({\n    alignContent: 'center',\n    margin: 5,\n    padding: 5,\n    color: 'black',\n    textDecoration: 'none',\n    backgroundColor: \"cornsilk\",\n    outline: 'thin solid black',\n    display: display\n  })\n}\nconst SignUpHomeStyle = (loggedIn) => {\n  var display = \"block\"\n  if (loggedIn === false) {\n      display = \"none\"\n  }\n  return ({\n    alignContent: 'center',\n    margin: 5,\n    padding: 5,\n    color: 'black',\n    textDecoration: 'none',\n    backgroundColor: \"orange\",\n    outline: 'thin solid black',\n    display: display\n  })\n}\n \nconst CompStyle = {\n    alignItems:'center',\n    alignContent:'center',\n    justifyContent:'center',\n    display:'flex',\n    flexDirection: 'column'\n}\n\nconst LoginHome = ({url, display}) => {\n  return (\n    <div style={CompStyle}>\n      <div style={CenterStyle}>\n        <Link to={{pathname: '/login'}} style={LoginHomeStyle(display)}>Login</Link>{' '}\n        <Link to={{pathname: '/signup'}} style={SignUpHomeStyle(display)}>Sign Up</Link>{' '}\n      </div>\n    </div>\n    \n  )};\nexport default LoginHome;","function getHeader() {\n    return({\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": sessionStorage.getItem('authToken')\n    })\n}\n\nfunction getRefreshHeader() {\n    return({\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        \"refresh-token\": sessionStorage.getItem('refreshToken')\n    })\n}\n\nfunction getRefreshParams() {\n    return({\n        \"method\": \"GET\",\n        \"headers\": getRefreshHeader()\n    })\n}\n\nfunction getGETParams() {\n    return({\n        \"method\": \"GET\",\n        \"headers\": getHeader()\n    })\n}\n\nfunction getPOSTParams(post) {\n    return({\n        \"method\": \"POST\",\n        \"headers\": getHeader(),\n        \"body\": JSON.stringify({\n            \"post\": post\n        })\n    })\n}\n\nfunction getPATCHParams(patch) {\n    return({\n        \"method\": \"PATCH\",\n        \"headers\": getHeader(),\n        \"body\": JSON.stringify({\n            \"post\": patch\n        })\n    })\n}\n\nfunction getDELETEParams() {\n    return({\n        \"method\": \"DELETE\",\n        \"headers\": getHeader()\n    })\n}\n\n\nexport { \n    getGETParams, \n    getPOSTParams, \n    getPATCHParams, \n    getDELETEParams,\n    getRefreshParams\n}","import { \n    getPOSTParams, \n    getGETParams, \n    getPATCHParams, \n    getDELETEParams,\n    getRefreshParams\n} from './params'\n\nasync function makeNewPost(url, post) {\n    // get list of items\n    let res = null;\n    try {\n        res = await fetch(url, getPOSTParams(post))\n        res = await res.json()\n        return res\n    } catch (err) {\n        //console.log(\"POST Error:\", err);\n        return err\n    }\n}\n\nasync function getObject(url) {\n    // get items\n    let res = null;\n    try {\n        res = await fetch(url, getGETParams())\n        res = await res.json()\n        return res\n    } catch (err) {\n        //console.log(\"GET Error:\", err);\n        return err\n    }\n}\n\nasync function patch(url, toPatch) {\n    // update specific field (field given in url)\n    let res = null;\n    try {\n        res = await fetch(url, getPATCHParams(toPatch))\n        res = await res.json()\n        return res\n    } catch (err) {\n        //console.log(\"PATCH Error:\", err);\n        return err\n    }\n}\n\nasync function deleteObject(url) {\n    // delete object\n    let res = null;\n    try {\n        res = await fetch(url, getDELETEParams())\n        res = await res.json()\n        return res\n    } catch (err) {\n        //console.log(\"DELETE Error:\", err);\n        return err\n    }\n}\n\nasync function getNewToken(url) {\n    // get list of items\n    let res = null;\n    try {\n        await fetch(url, getRefreshParams())\n        res = await res.json()\n        return res\n    } catch (err) {\n        //console.log(\"GET Error:\", err);\n        return err\n    }\n}\n\nexport { \n    makeNewPost, \n    getObject, \n    patch, \n    deleteObject,\n    getNewToken\n}","import React from 'react'\n\nconst errorStyle = (display) => {\n    return {\n        color: 'red',\n        display: display,\n        fontSize: \"smaller\",\n    }\n}\n\nconst ErrorMessage = ({msg, display}) => {\n    msg = msg.replace(/\"/g, \"\")\n    return (\n      <div>\n        <p style={errorStyle(display)}>{msg}</p>\n      </div>\n    )\n}\n\nexport default ErrorMessage\n\n","import {createHashHistory} from 'history'\nconst history = createHashHistory({forceRefresh:true})\nexport default history","import React, {useState} from 'react';\nimport 'rc-slider/assets/index.css';\nimport { \n    makeNewPost\n} from '../fetch/generalFetch';\nimport ErrorMessage from './Error'\nimport {\n  Link\n} from 'react-router-dom';\nimport history from './history'\n\nconst signUpStyle = {\n    alignContent: 'center',\n    margin: 5,\n    padding: 5,\n    backgroundColor: \"orange\",\n    alignSelf: 'center'\n}\n\nconst reqStyle = {\n    fontSize: \"smaller\",\n    fontWeight: \"lighter\",\n}\n\nasync function submitSignUp(postUrl, name, email, password) {\n    const signUpDetails = {\n        name: name,\n        email: email,\n        password: password\n    }\n    const signUp = await makeNewPost(postUrl, signUpDetails)\n    return (signUp)\n}\n\nconst SignUpForm= React.memo(({url, setLoggedIn}) => {\n    const [name, setName] = useState(\"\")\n    const [email, setEmail] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [displayError, setDisplayError] = useState(\"none\")\n    const [error, setError] = useState(\"\")\n    return (\n      <div style={signUpStyle}>\n        <form>\n          <p>Name:\n          <input \n            type=\"text\"\n            onChange={(e) => {\n                setName(e.target.value)\n            }}\n          />\n          </p>\n          <p>Email: \n          <input \n            type=\"text\"\n            onChange={(e) => {\n                setEmail(e.target.value)\n            }}\n          />\n          </p>\n          <p>Password: \n          <input \n            type=\"password\"\n            onChange={(e) => {\n                setPassword(e.target.value)\n            }}\n          />\n          </p>\n          <p style={reqStyle}>Must be at least 6 characters long</p>\n          <ErrorMessage \n            display={displayError} \n            msg={error}\n          />\n          <div>\n              <Link to={{pathname: '/home/pet'}}>\n                <button \n                  onClick={async (e) => {\n                    e.preventDefault()\n                    const user = await submitSignUp(url,name,email,password)\n                    // invalid login details\n                    if (user.msg) {\n                      setDisplayError(\"block\")\n                      setError(user.msg)\n                      return\n                    }\n                    setLoggedIn(true)\n                    setDisplayError(\"none\")\n                    sessionStorage.setItem('authToken', user[\"authToken\"])\n                    sessionStorage.setItem('refreshToken', user[\"refreshToken\"])\n                    history.push('/home/pet')\n                  }}\n                > \n                  Sign Up\n                </button>\n                </Link>\n            </div>\n        </form>\n      </div>\n    );\n})\n\n\n\n\nexport default SignUpForm;","import React, {useState} from 'react';\nimport {\n  Link\n} from 'react-router-dom';\nimport 'rc-slider/assets/index.css';\nimport { \n    makeNewPost\n} from '../fetch/generalFetch';\nimport ErrorMessage from './Error'\nimport history from './history'\n\nconst loginStyle = {\n    alignContent: 'center',\n    alignItems: 'center',\n    margin: 5,\n    padding: 5,\n    backgroundColor: \"cornsilk\",\n    alignSelf: 'center',\n    display:'flex',\n}\n\nasync function submitLogin(postUrl, email, password) {\n    const loginDetails = {\n        email: email,\n        password: password\n    }\n    const login = await makeNewPost(postUrl, loginDetails)\n    return (login)\n}\n\nconst LoginForm = React.memo(({url, setLoggedIn}) => {\n    const [email, setEmail] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [displayError, setDisplayError] = useState(\"none\")\n    const [error, setError] = useState(\"\")\n    async function login() {\n      const user = await submitLogin(url, email, password)\n        // invalid login details\n        if (user && user.msg) {\n            setDisplayError(\"block\")\n            setError(user.msg)\n            return false\n        }\n        if (user && user[\"authToken\"] && user[\"refreshToken\"]) {\n            setDisplayError(\"none\")\n            setError(\"\")\n            setLoggedIn(true)\n            sessionStorage.setItem('authToken', user[\"authToken\"])\n            sessionStorage.setItem('refreshToken', user[\"refreshToken\"])\n            return true\n        }\n        setDisplayError(\"block\")\n        setError(\"Unknown error occurred\")\n        return false\n    }\n    return (\n      <div style={loginStyle}>\n        <form>\n          <p>Email: \n          <input \n            type=\"text\"\n            onChange={(e) => {\n                setEmail(e.target.value)\n            }}\n          />\n          </p>\n          <p>Password: \n          <input \n            type=\"password\"\n            onChange={(e) => {\n                setPassword(e.target.value)\n            }}\n          />\n          </p>\n          <ErrorMessage display={displayError} msg={error}/>\n          <div>\n            <Link to={{pathname: '/home/pet'}}>\n            <button \n              onClick={async (e) => {\n                e.preventDefault()\n                const loggedIn = await login()\n                if (!loggedIn) {\n                    return\n                }\n                setLoggedIn(true)\n                history.push('/home/pet')\n            }}\n            > \n              Login\n            </button>\n            </Link>{' '}\n          </div>\n        </form>\n      </div>\n    );\n})\n\n\n\n\nexport default LoginForm;","import React, {useState, useEffect} from 'react';\nimport Slider from 'rc-slider';\nimport 'rc-slider/assets/index.css';\nimport { \n    makeNewPost, \n    patch, \n    getObject\n} from '../fetch/generalFetch';\nimport history from './history'\n\nconst moodStyle = {\n    alignContent: 'center',\n    margin: 10,\n    padding: 5,\n    outline: \"thick solid white\",\n    backgroundColor: \"paleturquoise\",\n    overflow: 'scroll',\n}\n\nconst moodSlider = {\n    position: 'inherit',\n}\n\nasync function submitMood(postUrl, id, scale, comments) {\n    const newMood = {\n        mood: scale,\n        comments: comments\n    }\n    var newPost = null\n    if (id != null) {\n        postUrl+= \"/\" + id\n        newPost = await patch(postUrl, newMood)\n    } else {\n      newPost = await makeNewPost(postUrl, newMood)\n    }\n    if (newPost) {\n        id = newPost._id\n        return id\n    }\n}\n\n// wrapper around mood input section\nconst MoodForm = React.memo(({moodUrl, setUserChange}) => {\n  const [scale, setScale] = useState(0)\n  const [com, setCom] = useState(\"\")\n  const [id, setID] = useState(null)\n  return (\n    <div style={moodStyle}>\n      <form>\n        <MoodInput \n          text1=\"How are you feeling today?\" \n          scale={scale}\n          setScale={setScale}\n          setCom={setCom}\n          com={com}\n        />\n        <p/>\n        <button \n          title = \"Save\"\n          onClick={async (e) => {\n              e.preventDefault()\n              const newID = await submitMood(moodUrl, id, scale, com)\n              setID(newID)\n              const random = Math.random().toString(36).substring(2, 15)\n              setUserChange(random)\n              history.push('/home/moods')\n          }}\n        > \n          Save \n        </button>\n        <button \n            title = \"Back\"\n            onClick={async (e) => {\n                history.goBack()\n            }}\n          > \n            Back \n        </button>\n      </form>\n    </div>\n  )\n})\n\nconst MoodInput = React.memo(({text1, scale, setScale, setCom, com}) => {\n    /*const [scale, setScale] = useState(0)\n    const [com, setCom] = useState(\"\")\n    const [id, setID] = useState(null)*/\n    return (\n      <div style={moodStyle}>\n        <p>{text1}</p>\n        <div style={moodSlider}>\n          <Slider\n            min={-1}\n            max={10}\n            value={scale}\n            onChange={(value) => {\n            setScale(value)\n            }}\n          />\n          <p>{scale}</p>\n        </div>\n        <p>Comments:\n        <input \n          type=\"text\"\n          value={com}\n          onChange={(e) => {\n            setCom(e.target.value)\n          }}\n        />\n        </p>\n      </div>\n    );\n})\n\nconst ViewMood = ({mood}) => {\n    if (!mood) {\n        return\n    }\n    const date = mood.dateCreated\n    const scale = mood.scale\n    const des = mood.comments\n    const id = mood._id\n    /*\n    const parent = mood.parent.id\n    var journal = false\n    var reflection = false\n    if (parent) {\n        if (mood.parent.reflection == true) {\n          reflection = true\n        }\n        if (mood.parent.journal == true) {\n          journal = true\n        }\n    }*/\n    return (\n      <div style={moodStyle}>\n          <p>{date.toString()}</p>\n          <p>Mood: {scale}/10 </p>\n          <p>{des}</p>\n      </div>)\n}\n\nconst ViewMoods = ({moodUrl}) => {\n    const [moods, setMoods] = useState([])\n    try {\n        //  get Moods from backend API\n        async function getMoods(url) {\n            const moods = await getObject(url)\n            // update moods array\n            setMoods(moods)\n        }\n        useEffect(() => {\n          getMoods(moodUrl);\n        }, [])\n    } catch (error) {\n        console.log(error)\n    }\n    return (<div style={moodStyle}>\n        Your Moods:\n        {moods.map((mood) => (<ViewMood mood={mood} key={mood._id}/>))}\n    </div>)\n}\n\nexport {MoodInput, ViewMoods, ViewMood, MoodForm};","import React from 'react'\n\nconst Image = ({src, alt, width, height, style}) => {\n    return (\n      <div>\n        <img \n          src={src} \n          alt={alt}\n          width={width}\n          height={height}\n          style={style}\n        />\n      </div>\n    )\n}\n\nexport default Image\n","import React, {useState, useEffect} from 'react';\nimport { \n    makeNewPost, \n    patch, \n    getObject\n} from '../fetch/generalFetch';\nimport Image from './Image'\nimport egg from '../assets/egg.png'\nimport baby from '../assets/baby.png'\nimport toddler from '../assets/toddler.png'\nimport teen from '../assets/teen.png'\nimport adult from '../assets/adult.png'\n\nconst petStates = [egg, baby, toddler, teen, adult]\n\nconst petStyle = {\n    alignContent: 'center',\n    margin: 5,\n    padding: 5,\n    alignSelf: 'center',\n    textAlign: 'center'\n}\n\nconst infoStyle = {\n    backgroundColor: \"lightcoral\",\n    padding: 3,\n}\n\nconst imageStyle = {\n    padding: 5,\n    margin: 5,\n    alignContent: 'center',\n    display: 'block',\n    visibility: 'visible',\n}\n\nconst imageWidth = \"auto\"\nconst imageHeight = Math.floor(window.innerHeight / 2)\n\nfunction differenceInDays(day1, day2) {\n    const date1 = new Date (day1)\n    const date2 = new Date (day2)\n    const days = Math.round(Math.abs(date1 - date2) / (1000 * 3600 * 24))\n    if (Number.isInteger(days)) {\n        return days\n    }\n    return 0\n}\n\nasync function submitPetName(postUrl, name, setChange) {\n    const newName = {\n        name: name\n    }\n    postUrl+= \"/name\"\n    const newPet = await patch(postUrl, newName)\n    if (newPet) {\n        setChange(newPet)\n        return newPet\n    }\n}\n\nasync function submitPetFood(postUrl, food, setChange) {\n    const feed = {\n        food: food\n    }\n    const newPet = await makeNewPost(postUrl, feed)\n    if (newPet) {\n        setChange(newPet)\n        return newPet\n    }\n}\n\nconst PetNameInput = ({petUrl, name, setName, setChange}) => {\n    return (\n      <div style={petStyle}>\n      <input type=\"text\" onChange={(e) => {\n        setName(e.target.value)\n      }}/>\n      <button \n        title = \"Edit\"\n        onClick={async (e) => {\n            e.preventDefault()\n            submitPetName(petUrl, name, setChange)\n        }}\n        > \n          Change name \n        </button>\n      </div>\n    )\n}\n\nconst ViewPet = ({petUrl, setUserChange}) => {\n    const [status, setStatus] = useState(0)\n    const [name, setName] = useState(\"Rocky\")\n    const [level, setLevel] = useState(0)\n    const [health, setHealth] = useState(100)\n    const [days, setDays] = useState(0)\n    const [foodToLevelUp, setFoodToLevelUp] = useState(0)\n    const [overallFoodIntake, setOverallFoodIntake] = useState(0)\n    const [foodNextLevel, setFoodNextLevel] = useState(1)\n    const [newName, setNewName] = useState(name)\n    const [pet, setPet] = useState({})\n    const [reqData, setReqData] = useState(\"\")\n    const [feed, setFeed] = useState(0)\n    try {\n        //  get pet info from backend API\n        async function getPet(url) {\n            const pet = await getObject(url)\n            // update pet object\n            if (!pet) {\n                return\n            }\n            setPet(pet)\n            const date = pet.born\n            setName(pet.name)\n            setNewName(pet.name)\n            setLevel(pet.level)\n            setHealth(pet.health)\n            setStatus(Math.round(pet.level/5))\n            setFoodToLevelUp(pet.foodRequiredToLevelUp)\n            setDays(differenceInDays(date, Date.now()))\n            setOverallFoodIntake(pet.overallFoodIntake)\n            setFoodNextLevel(pet.overallFoodIntake + pet.foodRequiredToLevelUp)\n        }\n        useEffect(() => {\n            setPet({})\n            getPet(petUrl);\n        }, [reqData])\n    } catch (error) {\n        console.log(error)\n    }\n    return (\n      <div style={petStyle}>\n          <Image \n            src={petStates[status]} \n            alt={name}\n            width={imageWidth}\n            height={imageHeight}\n            style={imageStyle}\n          />\n          <div style={infoStyle}>\n          <p>{name}</p>\n          <input \n            type=\"text\" \n            value={newName}\n            onChange={(e) => {\n              setNewName(e.target.value)\n          }}/>\n          <button \n            title = \"Edit\"\n            onClick={async (e) => {\n                e.preventDefault()\n                submitPetName(petUrl, newName, setReqData)\n                const random = Math.random().toString(36).substring(2, 15)\n                setUserChange(random)\n            }}\n          > \n            Change name \n          </button>\n          <p>Level: {level}  {overallFoodIntake}/{foodNextLevel} </p>\n          <p>Health: {health} </p>\n          <p>Food To Level Up: {foodToLevelUp} </p>\n          <p>Age: {days} days</p>\n          <p> Feed {name}: \n            <input \n              type=\"text\" \n              pattern=\"[0-9]*\" \n              onChange={(e) => {\n                setFeed(Number(e.target.value))\n              }}/>\n            <button \n              title = \"Feed\"\n              onClick={async (e) => {\n                e.preventDefault()\n                submitPetFood(petUrl, feed, setReqData)\n                const random = Math.random().toString(36).substring(2, 15)\n                setUserChange(random)\n              }}\n            > \n              Feed\n            </button>\n          </p>\n          </div>\n      </div>)\n}\n\nconst ViewPetSimple = ({petUrl}) => {\n    const [status, setStatus] = useState(0)\n    const [name, setName] = useState(\"\")\n    const [level, setLevel] = useState(0)\n    const [health, setHealth] = useState(100)\n    const [overallFoodIntake, setOverallFoodIntake] = useState(0)\n    const [foodNextLevel, setFoodNextLevel] = useState(1)\n    const [pet, setPet] = useState({})\n    try {\n        useEffect(() => {\n           //  get pet info from backend API\n          async function getPet(url) {\n            const pet = await getObject(url)\n            if (!pet) {\n                return\n            }\n            // update pet object\n            setPet(pet)\n            setName(pet.name)\n            setLevel(pet.level)\n            setStatus(Math.round(pet.level/5))\n            setHealth(pet.health)\n            setOverallFoodIntake(pet.overallFoodIntake)\n            setFoodNextLevel(pet.overallFoodIntake + pet.foodRequiredToLevelUp)\n          }  \n          setPet({})\n          getPet(petUrl);\n        }, [])\n    } catch (error) {\n        console.log(error)\n    }\n    return (\n      <div style={petStyle}>\n          <Image \n            src={petStates[status]} \n            alt={name}\n            width={imageWidth}\n            height={imageHeight}\n            style={imageStyle}\n          />\n          <div style={infoStyle}>\n            <p>{name}</p>\n            <p>Level: {level}  {overallFoodIntake}/{foodNextLevel} </p>\n            <p>Health: {health} </p>\n          </div>\n      </div>)\n}\n\nexport {ViewPetSimple, ViewPet, PetNameInput};","import React, {useState, useEffect} from 'react';\nimport { \n    makeNewPost, \n    patch, \n    getObject,\n    deleteObject\n} from '../fetch/generalFetch';\nimport { MoodInput } from './Mood';\nimport ErrorMessage from './Error'\nimport history from './history'\nimport {Link, Route, useLocation, useParams} from 'react-router-dom'\n\nconst reflectionStyle = {\n    alignContent: 'center',\n    margin: 5,\n    padding: 5,\n    outline: \"thick solid white\",\n    overflow: 'scroll',\n    backgroundColor: \"lavender\"\n}\n\nconst textBoxStyle = {\n    width: '95%',\n    height: '40',\n}\n\nasync function submitReflection(postUrl, id, \n    event, des, learnt, \n    scaleB, scaleD, scaleA, \n    comB, comD, comA, \n    eva, ana, act, con) {\n    \n    var extended = false;\n    if (eva !== \"\" || ana !== \"\" || act !== \"\" || con !== \"\") {\n        extended = true\n    }\n\n    const newEntryDetails = {\n        event: event,\n        description: des,\n        learnt: learnt,\n        moodBefore: scaleB,\n        moodDuring: scaleD,\n        moodAfter: scaleA,\n        commentsBefore: comB,\n        commentsDuring: comD,\n        commentsAfter: comA,\n        evaluation: eva,\n        actions: ana,\n        actionPlan: act,\n        conclusion: con,\n        extended: extended\n    }\n    var newPost = null\n    if (id != null) {\n        postUrl+= \"/\" + id\n        newPost = await patch(postUrl, newEntryDetails)\n    } else {\n        newPost = await makeNewPost(postUrl, newEntryDetails)\n    }\n    // error\n    if (newPost && newPost.msg) {\n        return newPost\n    }\n    id = newPost._id\n    return id\n}\nasync function deleteReflection(url, id, setChange) {\n    if (id != null) {\n        url+= \"/\" + id\n        const result = await deleteObject(url)\n        if (Array.isArray(result)) {\n            if (setChange) {  \n                setChange(id)\n            }\n            return result\n        }\n    } \n    return []\n}\n\nconst ReflectionInput = React.memo(({reflectionUrl, reflection, setUserChange}) => {\n    // set variables (reflection input)\n    const [event, setEvent] = useState(\"\")\n    const [des, setDes] = useState(\"\")\n    const [learnt, setLearnt] = useState(\"\")\n    const [moodB, setMoodB] = useState(0)\n    const [moodD, setMoodD] = useState(0)\n    const [moodA, setMoodA] = useState(0)\n    const [comB, setComB] = useState(\"\")\n    const [comD, setComD] = useState(\"\")\n    const [comA, setComA] = useState(\"\")\n    const [ana, setAna] = useState(\"\")\n    const [con, setCon] = useState(\"\")\n    const [eva, setEva] = useState(\"\")\n    const [act, setAct] = useState(\"\")\n    const [id, setID] = useState(null)\n    // set variables for error msgs\n    const [displayError, setDisplayError] = useState(\"none\")\n    const [error, setError] = useState(\"\")\n\n    const params = useParams()\n    const reflectionId = params.reflectionId\n    if (reflection) {\n        setEvent(reflection.event)\n        setDes(reflection.description)\n        setLearnt(reflection.learnt)\n        setMoodB(reflection.feelings.moodBefore.scale)\n        setMoodD(reflection.feelings.moodDuring.scale)\n        setMoodA(reflection.feelings.moodAfter.scale)\n        setComB(reflection.feelings.moodBefore.comments)\n        setComD(reflection.feelings.moodDuring.comments)\n        setComA(reflection.feelings.moodAfter.comments)\n        setEva(reflection.evaluation)\n        setCon(reflection.conclusion)\n        setAna(reflection.analysis)\n        setAct(reflection.actionPlan)\n        setID(reflectionId)\n    }\n    try {\n      async function getReflection() {\n          if (!reflectionId) {\n              return\n          }\n          const reflection = await getObject(reflectionUrl+\"/\"+reflectionId)\n          if (reflection && reflection.msg) {\n              return\n          }\n          setEvent(reflection.event)\n          setDes(reflection.description)\n          setLearnt(reflection.learnt)\n          setMoodB(reflection.feelings.moodBefore.scale)\n          setMoodD(reflection.feelings.moodDuring.scale)\n          setMoodA(reflection.feelings.moodAfter.scale)\n          setComB(reflection.feelings.moodBefore.comments)\n          setComD(reflection.feelings.moodDuring.comments)\n          setComA(reflection.feelings.moodAfter.comments)\n          setEva(reflection.evaluation)\n          setCon(reflection.conclusion)\n          setAna(reflection.analysis)\n          setAct(reflection.actionPlan)\n          setID(reflectionId)\n      }\n        useEffect(()=> {\n          getReflection()\n      }, [])\n    } catch (err) {\n        console.log(err)\n        return null\n    }\n    return (\n      <div style={reflectionStyle}>\n        <p>Write a reflection!!!</p>\n        <form>\n          <p>Event title: \n          <input \n            style={textBoxStyle}\n            placeholder=\"event\"\n            type=\"text\"\n            value={event}\n            onChange={(e) => {\n                setEvent(e.target.value)\n            }}\n          />\n          </p>\n          <p>What happened? </p>\n          <textarea \n            style={textBoxStyle}\n            value={des}\n            placeholder=\"description\"\n            onChange={(e) => {\n                setDes(e.target.value)\n            }}\n          />\n          <p>Action - What did you do in response: </p>\n          <textarea \n            style={textBoxStyle}\n            placeholder=\"actions\"\n            value={ana}\n            onChange={(e) => {\n                setAna(e.target.value)\n            }}\n          />\n          <p>Lessons Learnt: </p>\n          <textarea \n            style={textBoxStyle}\n            placeholder=\"what you learnt from this\"\n            value={learnt}\n            onChange={(e) => {\n                setLearnt(e.target.value)\n            }}\n          />\n          <MoodInput \n          text1=\"How did you feel before the event?\" \n          scale={moodB}\n          setScale={setMoodB}\n          setCom={setComB}\n          com={comB}\n          />\n          <MoodInput \n          text1=\"How did you feel during the event?\" \n          scale={moodD}\n          setScale={setMoodD}\n          setCom={setComD}\n          com={comD}\n          />\n          <MoodInput \n          text1=\"How did you feel after the event?\" \n          scale={moodA}\n          setScale={setMoodA}\n          setCom={setComA}\n          com={comA}\n          />\n          <p>Did you think you did a good job? </p>\n          <textarea \n            style={textBoxStyle}\n            placeholder=\"evaluation\"\n            value={eva}\n            onChange={(e) => {\n                setEva(e.target.value)\n            }}\n          />\n          <p>What would you do if it happened again? </p>\n          <textarea \n            style={textBoxStyle}\n            placeholder=\"action plan\"\n            value={act}\n            onChange={(e) => {\n                setAct(e.target.value)\n            }}\n          />\n          <p>Overall how did you think you went: </p>\n          <textarea\n            style={textBoxStyle} \n            placeholder=\"conclusion\"\n            type=\"text\"\n            value={con}\n            onChange={(e) => {\n                setCon(e.target.value)\n            }}\n          />\n          <ErrorMessage \n            display={displayError} \n            msg={error}\n          />\n          <button \n            title = \"Save\"\n            onClick={async (e) => {\n                e.preventDefault()\n                const newID = await submitReflection(reflectionUrl, id, \n                    event, des, learnt, \n                    moodB, moodD, moodA, \n                    comB, comD, comA,\n                    eva, ana, act, con\n                    )\n                if (newID && newID.msg) {\n                    // show error message\n                    setDisplayError(\"block\")\n                    setError(newID.msg)\n                    return\n                }\n                // ensure no error msg\n                setDisplayError(\"none\")\n                setError(\"\")\n                setID(newID)\n                const random = Math.random().toString(36).substring(2, 15)\n                setUserChange(random)\n                history.push('/home/reflections')\n            }}\n          > \n            Save \n          </button>\n          <button \n            title = \"Back\"\n            onClick={async (e) => {\n                e.preventDefault()\n                history.goBack()\n            }}\n          > \n            Back \n          </button>\n        </form>\n      </div>\n    );\n})\n\nconst ViewReflection = ({reflectionUrl, reflection, setChange, setUserChange}) => {\n    const path = useLocation().pathname\n    const pathname = path.replace(/\\/$/, '')\n    const [event, setEvent] = useState(\"\")\n    const [des, setDes] = useState(\"\")\n    const [learnt, setLearnt] = useState(\"\")\n    const [moodB, setMoodB] = useState(0)\n    const [moodD, setMoodD] = useState(0)\n    const [moodA, setMoodA] = useState(0)\n    const [comB, setComB] = useState(\"\")\n    const [comD, setComD] = useState(\"\")\n    const [comA, setComA] = useState(\"\")\n    const [ana, setAna] = useState(\"\")\n    const [con, setCon] = useState(\"\")\n    const [eva, setEva] = useState(\"\")\n    const [act, setAct] = useState(\"\")\n    const [id, setID] = useState(null)\n    const [date, setDate] = useState(Date.now())\n    const params = useParams()\n    const reflectionId = params.reflectionId\n    if (reflection) {\n        setEvent(reflection.event)\n        setDes(reflection.description)\n        setLearnt(reflection.learnt)\n        setMoodB(reflection.feelings.moodBefore.scale)\n        setMoodD(reflection.feelings.moodDuring.scale)\n        setMoodA(reflection.feelings.moodAfter.scale)\n        setComB(reflection.feelings.moodBefore.comments)\n        setComD(reflection.feelings.moodDuring.comments)\n        setComA(reflection.feelings.moodAfter.comments)\n        setEva(reflection.evaluation)\n        setCon(reflection.conclusion)\n        setAna(reflection.analysis)\n        setAct(reflection.actionPlan)\n        setID(reflectionId)\n        setDate(reflection.dateCreated)\n    }\n    try {\n        async function getReflection() {\n          if (!reflectionId) {\n              return\n          }\n          const reflection = await getObject(reflectionUrl+\"/\"+reflectionId)\n          if (reflection && reflection.msg) {\n              return\n          }\n          setEvent(reflection.event)\n          setDes(reflection.description)\n          setLearnt(reflection.learnt)\n          setMoodB(reflection.feelings.moodBefore.scale)\n          setMoodD(reflection.feelings.moodDuring.scale)\n          setMoodA(reflection.feelings.moodAfter.scale)\n          setComB(reflection.feelings.moodBefore.comments)\n          setComD(reflection.feelings.moodDuring.comments)\n          setComA(reflection.feelings.moodAfter.comments)\n          setEva(reflection.evaluation)\n          setCon(reflection.conclusion)\n          setAna(reflection.analysis)\n          setAct(reflection.actionPlan)\n          setDate(reflection.dateCreated)\n          setID(reflectionId)\n        }\n        useEffect(()=> {\n            getReflection()\n        }, [])\n    } catch (err) {\n        console.log(err)\n        return null\n    }\n    return (\n      <div style={reflectionStyle}>\n          <p>{date.toString()}</p>\n          <p>{event}</p>\n          <p>{des}</p>\n          <p>Actions taken: {ana}</p>\n          <p>Lessons Learnt: {learnt}</p>\n          <p>Mood Before: {moodB}/10</p>\n          <p>{comB}</p>\n          <p>Mood During: {moodD}/10</p>\n          <p>{comD}</p>\n          <p>Mood After: {moodA}/10</p>\n          <p>{comA}</p>\n          <p>Evaluation: {eva}</p>\n          <p>Action Plan for next time: {act}</p>\n          <p>Conclusion: {con}</p>\n          <Link to={{pathname: pathname+'/edit'}}>\n            <button \n              title = \"Edit\"\n            > \n              Edit \n            </button>\n          </Link>{' '}\n          <button \n            title = \"Delete\"\n            onClick={async (e) => {\n                e.preventDefault()\n                deleteReflection(reflectionUrl, id, setUserChange)\n                history.push('/home/reflections')\n            }}\n          > \n            Delete \n          </button>\n          <Route path={pathname+\"/edit\"} component={() => <ReflectionInput reflectionUrl={reflectionUrl} reflection={reflection} setChange={setChange} setUserChange={setUserChange}/>}/>\n      </div>)\n}\n\nconst ViewReflectionSimple = ({reflectionUrl, reflection, setChange, setUserChange}) => {\n    const path = useLocation().pathname\n    const pathname = path.replace(/\\/$/, '')\n    const date = reflection.dateCreated\n    const event = reflection.event\n    const id = reflection._id\n    if (!reflection) {\n      history.push('/home')\n      return null\n    }\n    return (\n      <div \n        style={reflectionStyle}\n      >\n          <p>{date.toString()}</p>\n          <p>{event}</p>\n          <Link to={{pathname: pathname+'/'+id}}>\n            <button \n              title = \"View\"\n            > \n              View\n            </button>\n          </Link>{' '}\n          <Link to={{pathname: pathname+'/'+id+'/edit'}}>\n            <button \n              title = \"Edit\"\n            > \n              Edit \n            </button>\n          </Link>{' '}\n          <button \n            title = \"Delete\"\n            onClick={async (e) => {\n                e.preventDefault()\n                deleteReflection(reflectionUrl, id, setChange)\n            }}\n          > \n            Delete \n          </button>\n          <Route exact path={pathname+\"/:reflectionId\"} component={() => <ViewReflection reflectionUrl={reflectionUrl} reflection={reflection} setChange={setChange} setUserChange={setUserChange}/>}/>\n          <Route path={pathname+\"/:reflectionId/edit\"} component={() => <ReflectionInput reflectionUrl={reflectionUrl} reflection={reflection} setChange={setChange} setUserChange={setUserChange}/>}/>\n      </div>)\n}\n\nconst ViewReflections = ({reflectionUrl, setUserChange}) => {\n    const [reflections, setReflections] = useState([])\n    const [reqData, setReqData] = useState(\"\")\n    try {\n        //  get Reflections from backend API\n        async function getReflections(url) {\n            const reflections = await getObject(url)\n            // update reflection array\n            setReflections(reflections)\n        }\n        useEffect(() => {\n            setReflections([])\n            getReflections(reflectionUrl);\n        }, [reqData])\n    } catch (error) {\n        console.log(error)\n    }\n    return (<div style={reflectionStyle}>\n        Your Reflections:\n        {reflections.map((reflection) => \n          (<ViewReflectionSimple\n            reflection={reflection} \n            reflectionUrl={reflectionUrl} \n            setReflections={setReflections}\n            setChange={setReqData}\n            key={reflection._id}\n            setUserChange={setUserChange}\n          />))}\n    </div>)\n}\n\nexport {ReflectionInput, ViewReflections, ViewReflection};","import React, {useState, useEffect} from 'react';\nimport { \n    makeNewPost, \n    patch, \n    getObject,\n    deleteObject\n} from '../fetch/generalFetch';\nimport { MoodInput } from './Mood';\nimport ErrorMessage from './Error'\nimport history from './history'\n\nimport {Link, Route, useLocation, useParams} from 'react-router-dom'\n\nconst journalStyle = {\n    alignContent: 'center',\n    margin: 5,\n    padding: 5,\n    outline: \"thick solid white\",\n    backgroundColor: \"palegreen\",\n    overflow: 'scroll',\n}\n\nconst textBoxStyle = {\n    width: '95%',\n    height: '40',\n}\n\nasync function submitJournal(postUrl, id, title, entry, positives, scale, comments) {\n    const newEntryDetails = {\n        title: title,\n        entry: entry,\n        positives: positives,\n        mood: scale,\n        comments: comments\n    }\n    var newPost = null\n    if (id != null) {\n      postUrl+= \"/\" + id\n        newPost = await patch(postUrl, newEntryDetails)\n    } else {\n        newPost = await makeNewPost(postUrl, newEntryDetails)\n    }\n    if (newPost.msg) {\n        return newPost\n    }\n    id = newPost._id\n    return id\n}\nasync function deleteJournal(url, id, setChange) {\n    if (id != null) {\n        url+= \"/\" + id\n        const result = await deleteObject(url)\n        if (Array.isArray(result)) {\n            if (setChange) {\n                setChange(id)\n            }\n            return result\n        }\n    } \n    return []\n}\nconst JournalInput = React.memo(({journalUrl, journal, setUserChange}) => {\n    const [title, setTitle] = useState(\"\")\n    const [entry, setEntry] = useState(\"\")\n    const [positives, setPositives] = useState(\"\")\n    const [mood, setMood] = useState(0)\n    const [com, setCom] = useState(\"\")\n    const [id, setID] = useState(null)\n    const [displayError, setDisplayError] = useState(\"none\")\n    const [error, setError] = useState(\"\")\n    const params = useParams()\n    const journalId = params.journalId\n    if (journal) {\n        setTitle(journal.title)\n        setEntry(journal.entry)\n        setMood(journal.mood.scale)\n        setCom(journal.mood.comments)\n        setPositives(journal.positives)\n        setID(journalId)\n    }\n    try {\n        async function getJournal() {\n            if (!journalId) {\n                return\n            }\n            const journal = await getObject(journalUrl+\"/\"+journalId)\n            if (journal && journal.msg) {\n                return\n            }\n            setTitle(journal.title)\n            setMood(journal.mood.scale)\n            setCom(journal.mood.comments)\n            setEntry(journal.entry)\n            setPositives(journal.positives)\n            setID(journalId)\n        }\n        useEffect(()=> {\n            getJournal()\n        }, [])\n    } catch (err) {\n        console.log(err)\n        return null\n    }\n    return (\n      <div style={journalStyle}>\n        <form>\n          <p>Entry Title: \n          <input \n            type=\"text\"\n            style={textBoxStyle}\n            value={title}\n            onChange={(e) => {\n                setTitle(e.target.value)\n            }}\n          />\n          </p>\n          <p>Your Entry: </p>\n          <textarea \n            style={textBoxStyle}\n            value={entry}\n            onChange={(e) => {\n                setEntry(e.target.value)\n            }}\n          />\n          <p>What were the positives? </p>\n          <textarea \n            style={textBoxStyle}\n            value={positives}\n            onChange={(e) => {\n                setPositives(e.target.value)\n            }}\n          />\n          <MoodInput \n          text1=\"How did you feel\" \n          scale={mood}\n          setScale={setMood}\n          setCom={setCom}\n          com={com}\n          />\n          <p/>\n          <ErrorMessage \n            display={displayError} \n            msg={error}\n          />\n          <button \n            title = \"Save\"\n            onClick={async (e) => {\n                e.preventDefault()\n                const newID = await submitJournal(journalUrl, id, title, entry, positives, mood, com)\n                if (newID && newID.msg) {\n                    // show error message\n                    setDisplayError(\"block\")\n                    setError(newID.msg)\n                    return\n                }\n                // ensure no error msg\n                setDisplayError(\"none\")\n                setError(\"\")\n                setID(newID)\n                const random = Math.random().toString(36).substring(2, 15)\n                setUserChange(random)\n                history.push('/home/journals/')\n            }}\n          > \n            Save \n          </button>\n          <button \n            title = \"Back\"\n            onClick={async (e) => {\n                e.preventDefault()\n                history.goBack()\n            }}\n          > \n            Back \n          </button>\n          <Route exact path={\"/home/journals\"} component={() => <ViewJournals journalUrl={journalUrl} setUserChange={setUserChange}/>}/>\n        </form>\n      </div>\n    );\n})\n\nconst ViewJournal = ({journalUrl, journal, setChange, setUserChange}) => {\n    const params = useParams()\n    const path = useLocation().pathname\n    const pathname = path.replace(/\\/$/, '')\n    const journalId = params.journalId\n    const [date, setDate] = useState(Date.now())\n    const [title, setTitle] = useState(\"\")\n    const [entry, setEntry] = useState(\"\")\n    const [mood, setMood] = useState(0)\n    const [comm, setComm] = useState(\"\")\n    const [positives, setPositives] = useState(\"\")\n    if (journal) {\n      setDate(journal.dateCreated)\n      setTitle(journal.title)\n      setMood(journal.mood.scale)\n      setComm(journal.mood.comments)\n      setEntry(journal.entry)\n      setPositives(journal.positives)\n    }\n    try {\n        async function getJournal() {\n            const journalObject = await getObject(journalUrl+\"/\"+journalId)\n            if (journalObject && journalObject.msg) {\n                return null\n            }\n            setDate(journalObject.dateCreated)\n            setTitle(journalObject.title)\n            setMood(journalObject.mood.scale)\n            setComm(journalObject.mood.comments)\n            setEntry(journalObject.entry)\n            setPositives(journalObject.positives)\n        }\n        useEffect(()=> {\n            getJournal()\n        })\n        if (!journalId) {\n            return false\n        }\n    } catch (err) {\n        console.log(err)\n        return null\n    }\n    return (\n      <div style={journalStyle}>\n          <p>{date.toString()}</p>\n          <p>{title}</p>\n          <p>Mood: {mood}/10 </p>\n          <p>Comments: {comm}</p>\n          <p>Entry: {entry}</p>\n          <p>Positives: {positives}</p>\n          <Link to={{pathname: pathname+'/edit'}}>\n            <button \n              title = \"Edit\"\n            > \n              Edit \n            </button>\n          </Link>{' '}\n          <button \n            title = \"Delete\"\n            onClick={async (e) => {\n                e.preventDefault()\n                deleteJournal(journalUrl, journalId, setChange)\n                history.push('/home/journals')\n            }}\n          > \n            Delete \n          </button>\n          <Route path={pathname+\"/edit\"} component={() => <JournalInput journalUrl={journalUrl} journal={journal} setChange={setChange} setUserChange={setUserChange}/>}/>\n      </div>)\n}\n\nconst ViewJournalSimple = ({journalUrl, journal, setChange, setUserChange}) => {\n    const path = useLocation().pathname\n    const pathname = path.replace(/\\/$/, '')\n    const date = journal.dateCreated\n    const title = journal.title\n    const mood = journal.mood.scale\n    const id = journal._id\n    if (!journal) {\n        history.push('/home')\n        return null\n    }\n    return (\n      <div \n        style={journalStyle}\n      >\n          <p>{date.toString()}</p>\n          <p>{title}</p>\n          <p>Mood: {mood}/10 </p>\n          <Link to={{pathname: pathname+'/'+id}}>\n            <button \n              title = \"View\"\n            > \n              View\n            </button>\n          </Link>{' '}\n          <Link to={{pathname: pathname+'/'+id+'/edit'}}>\n            <button \n              title = \"Edit\"\n            > \n              Edit \n            </button>\n          </Link>{' '}\n          <button \n            title = \"Delete\"\n            onClick={async (e) => {\n                e.preventDefault()\n                deleteJournal(journalUrl, id, setChange)\n            }}\n          > \n            Delete \n          </button>\n            <Route exact path={pathname+\"/:journalId\"} component={() => <ViewJournal journalUrl={journalUrl} journal={journal} setChange={setChange} setUserChange={setUserChange}/>}/>\n            <Route path={pathname+\"/:journalId/edit\"} component={() => <JournalInput journalUrl={journalUrl} journal={journal} setChange={setChange} setUserChange={setUserChange}/>}/>\n      </div>)\n}\n\nconst ViewJournals = ({journalUrl, setUserChange}) => {\n    const [journals, setJournals] = useState([])\n    const [reqData, setReqData] = useState(\"\")\n    try {\n        //  get Journals from backend API\n        async function getJournals(url) {\n            const journals = await getObject(url)\n            // update journals array\n            setJournals(journals)\n        }\n        useEffect(() => {\n            setJournals([])\n            getJournals(journalUrl);\n        }, [reqData])\n    } catch (error) {\n        console.log(error)\n    }\n    return (<div style={journalStyle}>\n        Your Journals:\n        {journals.map((journal) => \n          (<ViewJournalSimple\n            journal={journal} \n            journalUrl={journalUrl} \n            setJournals={setJournals}\n            setChange={setReqData}\n            key={journal._id}\n            setUserChange={setUserChange}\n          />))}\n    </div>)\n}\n\nexport {JournalInput, ViewJournals, ViewJournal};","import React from 'react'\nimport {makeNewPost} from '../fetch/generalFetch'\nimport url from './url'\nimport {\n  Link,\n  Route,\n  Switch,\n} from 'react-router-dom';\nimport LoginHome from './LoginHome'\nimport history from './history'\n\nasync function logout() {\n    const loggedout = await makeNewPost(url+\"user/logout\", {})\n    return loggedout\n}\n\nconst Logout = ({url, setLoggedIn}) => {\n    return (\n      <div>\n        <Link to={{pathname: '/login'}}>\n          <button \n            title = \"Logout\"\n            onClick={async (e) => {\n                e.preventDefault()\n                const loggedout = await logout(url)\n                // clear tokens\n                sessionStorage.removeItem('authToken')\n                sessionStorage.removeItem('refreshToken')\n                // return to login/signup page\n                history.push('/login')\n                setLoggedIn(false)\n            }}\n          > \n            Log out\n          </button>\n        </Link>{' '}\n        <Switch>\n          <Route path=\"/login\"component={() => <LoginHome url={url}/>}/>\n        </Switch>\n      </div>\n    )\n}\n\nexport default Logout\n\n","import { Link, Route } from 'react-router-dom';\nimport React, { useEffect, useState } from 'react';\nimport Logout from './Logout';\nimport { ViewMoods, MoodForm } from './Mood';\nimport { ViewPet, ViewPetSimple } from './Pet';\nimport {ViewReflections, ReflectionInput, ViewReflection } from './Reflection';\nimport {ViewJournals, ViewJournal, JournalInput} from './Journal'\nimport LoginHome from './LoginHome'\nimport { getObject } from '../fetch/generalFetch';\n\nconst PetStyle = {\n  margin: 20,\n  padding: 5,\n  color: 'black',\n  textDecoration: 'none',\n  backgroundColor: 'lightcoral',\n  outline: 'thin solid black'\n}\n\nconst JournalStyle = {\n  margin: 20,\n  padding: 5,\n  color: 'black',\n  textDecoration: 'none',\n  backgroundColor: 'palegreen',\n  outline: 'thin solid black'\n}\n\nconst ReflectionStyle = {\n  margin: 20,\n  padding: 5,\n  color: 'black',\n  textDecoration: 'none',\n  backgroundColor:\"lavender\",\n  outline: 'thin solid black'\n}\n\nconst MoodStyle = {\n  margin: 20,\n  padding: 5,\n  color: 'black',\n  textDecoration: 'none',\n  backgroundColor:'paleturquoise',\n  outline: 'thin solid black'\n}\n\nconst NavStyle = {\n  margin: 20,\n  padding: 5,\n  display: 'flex',\n  flexDirection: 'column',\n  overflow: 'scroll',\n}\nconst DisplayStyle = {\n  margin: 20,\n  padding: 5,\n  display: 'flex',\n  flexDirection: 'row',\n  overflow: 'scroll'\n}\n\nconst BoxStyle = {\n  display: 'flex',\n  flexDirection: 'column',\n  alignContent: 'center'\n}\n\nconst TitleStyle = {\n    textAlign: 'center'\n}\n\nconst ComponentStyle = {\n\n}\n\nconst QuoteStyle = (quote) => {\n    var display = 'none'\n    if (quote === true) {\n        display = 'block'\n    } \n    return ({\n        display: display\n    })\n}\n\nconst NavBar = ({url, setLoggedIn, pathname, loggedIn}) => {\n    const [name, setName] = useState(\"\")\n    const [points, setPoints] = useState(0)\n    const [change, setUserChange] = useState(\"\")\n    const [quote, setQuote] = useState(\"\")\n    const [author, setAuthor] = useState(\"\")\n    const [quoteAvailable, setQuoteAvailable] = useState(false)\n    useEffect(() => {\n        try {\n            async function getUserDetails() {\n                const user = await getObject(url+\"user\")  \n                if (user.name != null && user.remainingPoints != null) {\n                    setName(user.name)\n                    setPoints(user.remainingPoints)\n                }\n            }\n            /*async function getQuote() {\n                const res = await getObject(\"https://quotes.rest/qod?category=inspire&language=en\")\n                if (res && res.contents && res.contents.quotes && res.contents.quotes.length() > 0) {\n                    setQuoteAvailable(true)\n                    setQuote(res.contents.quotes[0].quote)\n                    setAuthor(res.contents.quotes[0].author)\n                }\n            }\n            setQuote(\"\")\n            setAuthor(\"\")\n            setQuoteAvailable(false)*/\n            setName(\"\")\n            setPoints(0)\n            getUserDetails()\n            //getQuote()\n        } catch (err) {\n            console.log(\"error:\", err)\n        }    \n    }, [loggedIn, change])\n    return (\n      <div style={BoxStyle}>\n      <div style={BoxStyle, TitleStyle}>\n        <p>Welcome back {name}!</p>\n        <p>Remaining points: {points}</p>\n        <div style={QuoteStyle(quoteAvailable)}>\n          <p>Your quote of the day: {quote}</p>\n          <p>By {author}</p>\n          </div>\n      </div>\n      <div style={DisplayStyle}>\n        <div style={NavStyle}>\n          <Link to={{pathname: pathname+'/pet'}} style={PetStyle}>View Pet</Link>{' '}\n          <Link to={{pathname: pathname+'/feedpet'}} style={PetStyle}>Feed Pet</Link>{' '}\n          <Link to={{pathname: pathname+'/journals'}} style={JournalStyle}>Journals</Link>{' '}\n          <Link to={{pathname: pathname+'/newjournal'}} style={JournalStyle}>Write a new Journal Entry</Link>{' '}\n          <Link to={{pathname: pathname+'/reflections'}} style={ReflectionStyle}>Reflections</Link>{' '}\n          <Link to={{pathname: pathname+'/newreflection'}} style={ReflectionStyle}>Write a new Reflection</Link>{' '}        \n          <Link to={{pathname: pathname+'/moods'}} style={MoodStyle}>Mood</Link>{' '}\n          <Link to={{pathname: pathname+'/newmood'}} style={MoodStyle}>New Mood</Link>{' '}\n          <Logout url={url} setLoggedIn={setLoggedIn}/>\n        </div> \n        <div style={ComponentStyle}>\n          <Route path={pathname+\"/pet\"} component={() => <ViewPetSimple petUrl={url+\"pet\"}/>}/>\n          <Route path={pathname+\"/feedpet\"} component={() => <ViewPet petUrl={url+\"pet\"} setUserChange={setUserChange}/>}/>\n          <Route exact path={pathname+\"/journals\"} component={() => <ViewJournals journalUrl={url+\"journal\"} setUserChange={setUserChange}/>}/>\n          <Route exact path={pathname+\"/journals/:journalId\"} component={() => <ViewJournal journalUrl={url+\"journal\"} setUserChange={setUserChange}/>}/>\n          <Route path={pathname+\"/journals/:journalId/edit\"} component={() => <JournalInput journalUrl={url+\"journal\"} setUserChange={setUserChange}/>}/>\n          <Route path={pathname+\"/newjournal\"} component={() => <JournalInput journalUrl={url+\"journal\"} setUserChange={setUserChange}/>}/>\n          <Route exact path={pathname+\"/reflections\"} component={() => <ViewReflections reflectionUrl={url+\"reflection\"} setUserChange={setUserChange}/>}/>\n          <Route path={pathname+\"/newreflection\"} component={() => <ReflectionInput reflectionUrl={url+\"reflection\"} setUserChange={setUserChange}/>}/>\n          <Route exact path={pathname+\"/reflections/:reflectionId\"} component={() => <ViewReflection reflectionUrl={url+\"reflection\"}setUserChange={setUserChange}/>}/>\n          <Route exact path={pathname+\"/reflections/:reflectionId/edit\"} component={() => <ReflectionInput reflectionUrl={url+\"reflection\"} setUserChange={setUserChange}/>}/>\n          <Route path={pathname+\"/moods\"} component={() => <ViewMoods moodUrl={url+\"moods\"}/>}/>\n          <Route path={pathname+\"/newmood\"} component={() => <MoodForm moodUrl={url+\"moods\"} setUserChange={setUserChange}/>}/>\n          <Route path={pathname+\"/login\"} component={() => <LoginHome url={url}/>}/>\n        </div>\n      </div>  \n      </div> \n    )};\nexport default NavBar;","import React, {useState, useEffect} from 'react';\nimport background from './assets/StartingBackground.png';\nimport LoginHome from './components/LoginHome'\nimport { HashRouter, Switch, Route } from 'react-router-dom';\nimport SignUpForm from './components/Signup'\nimport LoginForm from './components/Login'\nimport { ViewMoods, MoodForm } from './components/Mood';\nimport { ViewPet, ViewPetSimple } from './components/Pet';\nimport {ViewReflections, ReflectionInput } from './components/Reflection';\nimport {ViewJournals,JournalInput} from './components/Journal'\nimport NavBar from './components/NavBar'\nconst url = \"http://localhost:5000/api/\"\n\nconst style = {  \n  backgroundImage: \"url(\" + background + \")\",\n  backgroundPosition: 'center',\n  backgroundSize: 'cover',\n  backgroundRepeat: 'no-repeat',\n  height: '100%',\n  width: '100%',\n  position: 'absolute',\n  padding: 10,\n  display: 'flex',\n  flexDirection:'column',\n  opacity: 0.8,\n  overflow: 'scroll'\n}\n\nconst header_style = {\n  alignContent:'center',\n  alignItems: 'center',\n  display:'flex',\n  flexDirection:'column'\n}\n\nconst columnStyle = {\n    display: 'flex',\n    flexDirection:'column'\n}\n\nconst unauthorisedStyle = (loggedIn) => {\n    var display = \"block\"\n    if (loggedIn === true) {\n        display = \"none\"\n    }\n    return {\n        display: display,\n    }\n}\n\nconst authorisedStyle = (loggedIn) => {\n  var display = \"none\"\n  if (loggedIn === true) {\n      display = \"block\"\n  }\n  return {\n      display: display,\n  }\n}\n\nfunction App() {\n  const [loggedIn, setLoggedIn] = useState(false)\n  const pathname='/home'\n  //          <Route exact path={pathname} component={() => <NavBar url={url} pathname=\"/home\" setLoggedIn={setLoggedIn}/>}/>\n  return (\n    <div style={style}>\n      <h1 style={header_style}>My Secret Garden</h1>\n      <div>\n      <HashRouter>\n        <div style={unauthorisedStyle(loggedIn)}>\n          <LoginHome url={url} loggedInPath=\"/home/pet\"/>\n        </div>\n        <div style={authorisedStyle(loggedIn)}>\n          <NavBar url={url} pathname=\"/home\" setLoggedIn={setLoggedIn} loggedIn={loggedIn}/>\n        </div>\n        <div style={columnStyle}>\n          <Switch>\n            <Route path=\"/login\" component={() => <LoginForm url={url+\"user/login\"} setLoggedIn={setLoggedIn}/>}/>\n            <Route path=\"/signup\"component={() => <SignUpForm url={url+\"user/signup\"} setLoggedIn={setLoggedIn}/>}/>\n          </Switch>\n        </div>\n      </HashRouter>\n      </div>\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}