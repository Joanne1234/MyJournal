{"version":3,"sources":["assets/StartingBackground.png","assets/egg.png","assets/baby.png","assets/toddler.png","assets/teen.png","assets/adult.png","fetch/params.js","fetch/generalFetch.js","components/Error.js","components/history.js","components/Mood.js","components/Image.js","components/Pet.js","components/Reflection.js","components/Journal.js","components/Logout.js","components/Home.js","components/Signup.js","components/Login.js","components/LoginHome.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","getHeader","Accept","sessionStorage","getItem","getGETParams","getPOSTParams","post","JSON","stringify","getPATCHParams","patch","getDELETEParams","makeNewPost","url","a","res","console","log","fetch","json","getObject","toPatch","deleteObject","errorStyle","display","color","fontSize","ErrorMessage","msg","replace","style","history","createBrowserHistory","forceRefresh","moodStyle","alignContent","margin","padding","outline","backgroundColor","overflow","moodSlider","position","submitMood","postUrl","id","scale","comments","newMood","mood","newPost","_id","MoodForm","React","memo","moodUrl","useState","setScale","com","setCom","setID","MoodInput","text1","title","onClick","e","preventDefault","newID","push","min","max","value","onChange","type","target","ViewMood","date","dateCreated","des","description","toString","ViewMoods","moods","setMoods","getMoods","useEffect","error","map","key","Image","src","alt","width","height","petStates","egg","baby","toddler","teen","adult","petStyle","alignSelf","textAlign","infoStyle","imageStyle","visibility","imageHeight","Math","floor","window","innerHeight","differenceInDays","day1","day2","date1","Date","date2","days","round","abs","Number","isInteger","submitPetName","name","setChange","newName","newPet","submitPetFood","food","feed","ViewPet","petUrl","status","setStatus","setName","level","setLevel","health","setHealth","setDays","foodToLevelUp","setFoodToLevelUp","overallFoodIntake","setOverallFoodIntake","foodNextLevel","setFoodNextLevel","setNewName","setPet","reqData","setReqData","setFeed","getPet","pet","born","foodRequiredToLevelUp","now","pattern","ViewPetSimple","reflectionStyle","textBoxStyle","submitReflection","event","learnt","scaleB","scaleD","scaleA","comB","comD","comA","eva","ana","act","con","extended","newEntryDetails","moodBefore","moodDuring","moodAfter","commentsBefore","commentsDuring","commentsAfter","evaluation","actions","actionPlan","conclusion","deleteReflection","result","Array","isArray","ReflectionInput","reflectionUrl","reflection","setEvent","setDes","setLearnt","moodB","setMoodB","moodD","setMoodD","moodA","setMoodA","setComB","setComD","setComA","setAna","setCon","setEva","setAct","displayError","setDisplayError","setError","analysis","placeholder","Error","ViewReflectionSimple","ViewReflections","reflections","setReflections","getReflections","journalStyle","submitJournal","entry","positives","deleteJournal","JournalInput","journalUrl","journal","setTitle","setEntry","setPositives","setMood","ViewJournalSimple","ViewJournals","journals","setJournals","getJournals","logout","loggedout","Logout","to","pathname","removeItem","path","component","PetStyle","textDecoration","JournalStyle","ReflectionStyle","MoodStyle","NavStyle","flexDirection","DisplayStyle","Home","buttonPressed","setButtonPressed","view","setView","renders","setRenders","points","setPoints","onclick","getUserDetails","user","remainingPoints","err","signUpStyle","reqStyle","fontWeight","submitSignUp","email","password","signUpDetails","signUp","SignUpForm","setEmail","setPassword","setItem","baseUrl","loginStyle","alignItems","submitLogin","loginDetails","login","LoginForm","setLoggedIn","loggedIn","exact","CenterStyle","justifyContent","LoginHomeStyle","SignUpHomeStyle","CompStyle","LoginHome","setDisplay","Login","backgroundImage","background","backgroundPosition","backgroundSize","backgroundRepeat","opacity","header_style","App","process","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.627cd6d8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/StartingBackground.6cb4e8f9.png\";","module.exports = __webpack_public_path__ + \"static/media/egg.2b73145f.png\";","module.exports = __webpack_public_path__ + \"static/media/baby.54153fc8.png\";","module.exports = __webpack_public_path__ + \"static/media/toddler.23e805ae.png\";","module.exports = __webpack_public_path__ + \"static/media/teen.6275f614.png\";","module.exports = __webpack_public_path__ + \"static/media/adult.5327aaaa.png\";","function getHeader() {\n    return({\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": sessionStorage.getItem('authToken')\n    })\n}\n\nfunction getRefreshHeader() {\n    return({\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        \"refresh-token\": sessionStorage.getItem('refreshToken')\n    })\n}\n\nfunction getRefreshParams() {\n    return({\n        \"method\": \"GET\",\n        \"headers\": getRefreshHeader()\n    })\n}\n\nfunction getGETParams() {\n    return({\n        \"method\": \"GET\",\n        \"headers\": getHeader()\n    })\n}\n\nfunction getPOSTParams(post) {\n    return({\n        \"method\": \"POST\",\n        \"headers\": getHeader(),\n        \"body\": JSON.stringify({\n            \"post\": post\n        })\n    })\n}\n\nfunction getPATCHParams(patch) {\n    return({\n        \"method\": \"PATCH\",\n        \"headers\": getHeader(),\n        \"body\": JSON.stringify({\n            \"post\": patch\n        })\n    })\n}\n\nfunction getDELETEParams() {\n    return({\n        \"method\": \"DELETE\",\n        \"headers\": getHeader()\n    })\n}\n\n\nexport { \n    getGETParams, \n    getPOSTParams, \n    getPATCHParams, \n    getDELETEParams,\n    getRefreshParams\n}","import { \n    getPOSTParams, \n    getGETParams, \n    getPATCHParams, \n    getDELETEParams,\n    getRefreshParams\n} from './params'\n\nasync function makeNewPost(url, post) {\n    // get list of items\n    let res = null;\n    try {\n        console.log(url, post)\n        res = await fetch(url, getPOSTParams(post))\n        res = await res.json()\n        return res\n    } catch (err) {\n        console.log(\"POST Error:\", err);\n        return err\n    }\n}\n\nasync function getObject(url) {\n    // get items\n    let res = null;\n    try {\n        console.log(\"getting object\", url)\n        res = await fetch(url, getGETParams())\n        res = await res.json()\n        return res\n    } catch (err) {\n        console.log(\"GET Error:\", err);\n    }\n}\n\nasync function patch(url, toPatch) {\n    // update specific field (field given in url)\n    let res = null;\n    try {\n        res = await fetch(url, getPATCHParams(toPatch))\n        res = await res.json()\n        return res\n    } catch (err) {\n        console.log(\"PATCH Error:\", err);\n    }\n}\n\nasync function deleteObject(url) {\n    // delete object\n    let res = null;\n    try {\n        res = await fetch(url, getDELETEParams())\n        res = await res.json()\n        return res\n    } catch (err) {\n        console.log(\"DELETE Error:\", err);\n    }\n}\n\nasync function getNewToken(url) {\n    // get list of items\n    let res = null;\n    try {\n        await fetch(url, getRefreshParams())\n        res = await res.json()\n        return res\n    } catch (err) {\n        console.log(\"GET Error:\", err);\n        return err\n    }\n}\n\nexport { \n    makeNewPost, \n    getObject, \n    patch, \n    deleteObject,\n    getNewToken\n}","import React from 'react'\n\nconst errorStyle = (display) => {\n    return {\n        color: 'red',\n        display: display,\n        fontSize: \"smaller\",\n    }\n}\n\nconst ErrorMessage = ({msg, display}) => {\n    msg = msg.replace(/\\\"/g, \"\")\n    return (\n      <div>\n        <p style={errorStyle(display)}>{msg}</p>\n      </div>\n    )\n}\n\nexport default ErrorMessage\n\n","import {createBrowserHistory} from 'history'\nconst history = createBrowserHistory({forceRefresh:true})\nexport default history","import React, {useState, useEffect} from 'react';\nimport Slider from 'rc-slider';\nimport 'rc-slider/assets/index.css';\nimport { \n    makeNewPost, \n    patch, \n    getObject\n} from '../fetch/generalFetch';\nimport history from './history'\n\nconst moodStyle = {\n    alignContent: 'center',\n    margin: 10,\n    padding: 5,\n    outline: \"thick solid paleturquoise\",\n    backgroundColor: \"paleturquoise\",\n    overflow: 'scroll',\n}\n\nconst moodSlider = {\n    position: 'inherit',\n}\n\nasync function submitMood(postUrl, id, scale, comments) {\n    console.log(\"patchmood...\", scale, comments, id)\n    const newMood = {\n        mood: scale,\n        comments: comments\n    }\n    var newPost = null\n    if (id != null) {\n        postUrl+= \"/\" + id\n        newPost = await patch(postUrl, newMood)\n    } else {\n      console.log(\"new post...\", postUrl, newMood)  \n      newPost = await makeNewPost(postUrl, newMood)\n    }\n    if (newPost) {\n        console.log(newPost)\n        id = newPost._id\n        return id\n    }\n}\n\n// wrapper around mood input section\nconst MoodForm = React.memo(({moodUrl}) => {\n  const [scale, setScale] = useState(0)\n  const [com, setCom] = useState(\"\")\n  const [id, setID] = useState(null)\n  return (\n    <div style={moodStyle}>\n      <form>\n        <MoodInput \n          text1=\"How are you feeling today?\" \n          scale={scale}\n          setScale={setScale}\n          setCom={setCom}\n          com={com}\n        />\n        <p/>\n        <button \n          title = \"Done\"\n          onClick={async (e) => {\n              e.preventDefault()\n              const newID = await submitMood(moodUrl, id, scale, com)\n              setID(newID)\n              console.log(\"newID\", newID)\n              history.push('/home/moods')\n          }}\n        > \n          Save \n        </button>\n        <button \n            title = \"Back\"\n            onClick={async (e) => {\n                e.preventDefault()\n                history.push('/home/moods')\n            }}\n          > \n            Back \n        </button>\n      </form>\n    </div>\n  )\n})\n\nconst MoodInput = React.memo(({text1, scale, setScale, setCom, com}) => {\n    /*const [scale, setScale] = useState(0)\n    const [com, setCom] = useState(\"\")\n    const [id, setID] = useState(null)*/\n    return (\n      <div style={moodStyle}>\n        <p>{text1}</p>\n        <div style={moodSlider}>\n          <Slider\n            min={-1}\n            max={10}\n            value={scale}\n            onChange={(value) => {\n            setScale(value)\n            }}\n          />\n          <p>{scale}</p>\n        </div>\n        <p>Comments:\n        <input \n          type=\"text\"\n          value={com}\n          onChange={(e) => {\n            setCom(e.target.value)\n          }}\n        />\n        </p>\n      </div>\n    );\n})\n\nconst ViewMood = ({mood}) => {\n    if (!mood) {\n        return\n    }\n    const date = mood.dateCreated\n    const scale = mood.scale\n    const des = mood.description\n    const id = mood._id\n    /*\n    const parent = mood.parent.id\n    var journal = false\n    var reflection = false\n    if (parent) {\n        if (mood.parent.reflection == true) {\n          reflection = true\n        }\n        if (mood.parent.journal == true) {\n          journal = true\n        }\n    }*/\n    return (\n      <div style={moodStyle}>\n          <p>{date.toString()}</p>\n          <p>Mood: {scale}/10 </p>\n          <p>{des}</p>\n      </div>)\n}\n\nconst ViewMoods = ({moodUrl}) => {\n    const [moods, setMoods] = useState([])\n    try {\n        //  get Moods from backend API\n        async function getMoods(url) {\n            const moods = await getObject(url)\n            // update moods array\n            setMoods(moods)\n        }\n        useEffect(() => {\n          getMoods(moodUrl);\n        }, [])\n    } catch (error) {\n        console.log(error)\n    }\n    return (<div style={moodStyle}>\n        Your Moods:\n        {moods.map((mood) => (<ViewMood mood={mood} key={mood._id}/>))}\n    </div>)\n}\n\nexport {MoodInput, ViewMoods, ViewMood, MoodForm};","import React from 'react'\n\nconst Image = ({src, alt, width, height, style}) => {\n    return (\n      <div>\n        <img \n          src={src} \n          alt={alt}\n          width={width}\n          height={height}\n          style={style}\n        />\n      </div>\n    )\n}\n\nexport default Image\n","import React, {useState, useEffect} from 'react';\nimport { \n    makeNewPost, \n    patch, \n    getObject\n} from '../fetch/generalFetch';\nimport Image from './Image'\nimport egg from '../assets/egg.png'\nimport baby from '../assets/baby.png'\nimport toddler from '../assets/toddler.png'\nimport teen from '../assets/teen.png'\nimport adult from '../assets/adult.png'\n\nconst petStates = [egg, baby, toddler, teen, adult]\n\nconst petStyle = {\n    alignContent: 'center',\n    margin: 5,\n    padding: 5,\n    alignSelf: 'center',\n    textAlign: 'center'\n}\n\nconst infoStyle = {\n    backgroundColor: \"lightcoral\",\n    padding: 3,\n}\n\nconst imageStyle = {\n    padding: 5,\n    margin: 5,\n    alignContent: 'center',\n    display: 'block',\n    visibility: 'visible',\n}\n\nconst imageWidth = \"auto\"\nconst imageHeight = Math.floor(window.innerHeight / 2)\n\nfunction differenceInDays(day1, day2) {\n    const date1 = new Date (day1)\n    const date2 = new Date (day2)\n    const days = Math.round(Math.abs(date1 - date2) / (1000 * 3600 * 24))\n    if (Number.isInteger(days)) {\n        return days\n    }\n    return 0\n}\n\nasync function submitPetName(postUrl, name, setChange) {\n    const newName = {\n        name: name\n    }\n    postUrl+= \"/name\"\n    const newPet = await patch(postUrl, newName)\n    if (newPet) {\n        setChange(newPet)\n        return newPet\n    }\n}\n\nasync function submitPetFood(postUrl, food, setChange) {\n    const feed = {\n        food: food\n    }\n    const newPet = await makeNewPost(postUrl, feed)\n    if (newPet) {\n        setChange(newPet)\n        return newPet\n    }\n}\n\nconst PetNameInput = ({petUrl, name, setName, setChange}) => {\n    return (\n      <div style={petStyle}>\n      <input type=\"text\" onChange={(e) => {\n        setName(e.target.value)\n      }}/>\n      <button \n        title = \"Edit\"\n        onClick={async (e) => {\n            e.preventDefault()\n            submitPetName(petUrl, name, setChange)\n        }}\n        > \n          Change name \n        </button>\n      </div>\n    )\n}\n\nconst ViewPet = ({petUrl}) => {\n    const [status, setStatus] = useState(0)\n    const [name, setName] = useState(\"Rocky\")\n    const [level, setLevel] = useState(0)\n    const [health, setHealth] = useState(100)\n    const [days, setDays] = useState(0)\n    const [foodToLevelUp, setFoodToLevelUp] = useState(0)\n    const [overallFoodIntake, setOverallFoodIntake] = useState(0)\n    const [foodNextLevel, setFoodNextLevel] = useState(1)\n    const [newName, setNewName] = useState(name)\n    const [pet, setPet] = useState({})\n    const [reqData, setReqData] = useState(\"\")\n    const [feed, setFeed] = useState(0)\n    try {\n        //  get pet info from backend API\n        async function getPet(url) {\n            const pet = await getObject(url)\n            // update pet object\n            if (!pet) {\n                return\n            }\n            setPet(pet)\n            const date = pet.born\n            setName(pet.name)\n            setNewName(pet.name)\n            setLevel(pet.level)\n            setHealth(pet.health)\n            setStatus(Math.round(pet.level/5))\n            setFoodToLevelUp(pet.foodRequiredToLevelUp)\n            setDays(differenceInDays(date, Date.now()))\n            setOverallFoodIntake(pet.overallFoodIntake)\n            setFoodNextLevel(pet.overallFoodIntake + pet.foodRequiredToLevelUp)\n        }\n        useEffect(() => {\n            setPet({})\n            getPet(petUrl);\n        }, [reqData])\n    } catch (error) {\n        console.log(error)\n    }\n    return (\n      <div style={petStyle}>\n          <Image \n            src={petStates[status]} \n            alt={name}\n            width={imageWidth}\n            height={imageHeight}\n            style={imageStyle}\n          />\n          <div style={infoStyle}>\n          <p>{name}</p>\n          <input \n            type=\"text\" \n            value={newName}\n            onChange={(e) => {\n              setNewName(e.target.value)\n          }}/>\n          <button \n            title = \"Edit\"\n            onClick={async (e) => {\n                e.preventDefault()\n                submitPetName(petUrl, newName, setReqData)\n            }}\n          > \n            Change name \n          </button>\n          <p>Level: {level}  {overallFoodIntake}/{foodNextLevel} </p>\n          <p>Health: {health} </p>\n          <p>Food To Level Up: {foodToLevelUp} </p>\n          <p>Age: {days} days</p>\n          <p> Feed {name}: \n            <input \n              type=\"text\" \n              pattern=\"[0-9]*\" \n              onChange={(e) => {\n                setFeed(Number(e.target.value))\n              }}/>\n            <button \n              title = \"Feed\"\n              onClick={async (e) => {\n                e.preventDefault()\n                submitPetFood(petUrl, feed, setReqData)\n              }}\n            > \n              Feed\n            </button>\n          </p>\n          </div>\n      </div>)\n}\n\nconst ViewPetSimple = ({petUrl}) => {\n    const [status, setStatus] = useState(0)\n    const [name, setName] = useState(\"\")\n    const [level, setLevel] = useState(0)\n    const [health, setHealth] = useState(100)\n    const [overallFoodIntake, setOverallFoodIntake] = useState(0)\n    const [foodNextLevel, setFoodNextLevel] = useState(1)\n    const [pet, setPet] = useState({})\n    const [reqData, setReqData] = useState(\"\")\n    try {\n        //  get pet info from backend API\n        async function getPet(url) {\n            const pet = await getObject(url)\n            if (!pet) {\n                return\n            }\n            // update pet object\n            setPet(pet)\n            setName(pet.name)\n            setLevel(pet.level)\n            setStatus(Math.round(pet.level/5))\n            setHealth(pet.health)\n            setOverallFoodIntake(pet.overallFoodIntake)\n            setFoodNextLevel(pet.overallFoodIntake + pet.foodRequiredToLevelUp)\n        }\n        useEffect(() => {\n            setPet({})\n            getPet(petUrl);\n        }, [reqData])\n    } catch (error) {\n        console.log(error)\n    }\n    return (\n      <div style={petStyle}>\n          <Image \n            src={petStates[status]} \n            alt={name}\n            width={imageWidth}\n            height={imageHeight}\n            style={imageStyle}\n          />\n          <div style={infoStyle}>\n            <p>{name}</p>\n            <p>Level: {level}  {overallFoodIntake}/{foodNextLevel} </p>\n            <p>Health: {health} </p>\n          </div>\n      </div>)\n}\n\nexport {ViewPetSimple, ViewPet, PetNameInput};","import React, {useState, useEffect} from 'react';\nimport { \n    makeNewPost, \n    patch, \n    getObject,\n    deleteObject\n} from '../fetch/generalFetch';\nimport { MoodInput } from './Mood';\nimport ErrorMessage from './Error'\n\nconst reflectionStyle = {\n    alignContent: 'center',\n    margin: 5,\n    padding: 5,\n    outline: \"thick solid white\",\n    overflow: 'scroll',\n    backgroundColor: \"lavender\"\n}\n\nconst textBoxStyle = {\n    width: '95%',\n    height: '40',\n}\n\nasync function submitReflection(postUrl, id, \n    event, des, learnt, \n    scaleB, scaleD, scaleA, \n    comB, comD, comA, \n    eva, ana, act, con) {\n    \n    console.log(\"patchjournal...\", id, event, des, learnt, \n    scaleB, scaleD, scaleA, \n    comB, comD, comA, \n    eva, ana, act, con)\n    var extended = false;\n    if (eva !== \"\" || ana !== \"\" || act !== \"\" || con !== \"\") {\n        extended = true\n    }\n\n    const newEntryDetails = {\n        event: event,\n        description: des,\n        learnt: learnt,\n        moodBefore: scaleB,\n        moodDuring: scaleD,\n        moodAfter: scaleA,\n        commentsBefore: comB,\n        commentsDuring: comD,\n        commentsAfter: comA,\n        evaluation: eva,\n        actions: ana,\n        actionPlan: act,\n        conclusion: con,\n        extended: extended\n    }\n    var newPost = null\n    if (id != null) {\n        postUrl+= \"/\" + id\n        newPost = await patch(postUrl, newEntryDetails)\n    } else {\n        newPost = await makeNewPost(postUrl, newEntryDetails)\n    }\n    console.log(newPost)\n    // error\n    if (newPost && newPost.msg) {\n        return newPost\n    }\n    console.log(newPost)\n    id = newPost._id\n    return id\n}\nasync function deleteReflection(url, id, setChange) {\n    console.log(\"deletereflection...\", url, id)\n    if (id != null) {\n        url+= \"/\" + id\n        const result = await deleteObject(url)\n        if (Array.isArray(result)) {\n            setChange(id)\n            return result\n        }\n    } \n    return []\n}\n\nconst ReflectionInput = React.memo(({reflectionUrl, reflection}) => {\n    // set variables (reflection input)\n    const [event, setEvent] = useState(\"\")\n    const [des, setDes] = useState(\"\")\n    const [learnt, setLearnt] = useState(\"\")\n    const [moodB, setMoodB] = useState(0)\n    const [moodD, setMoodD] = useState(0)\n    const [moodA, setMoodA] = useState(0)\n    const [comB, setComB] = useState(\"\")\n    const [comD, setComD] = useState(\"\")\n    const [comA, setComA] = useState(\"\")\n    const [ana, setAna] = useState(\"\")\n    const [con, setCon] = useState(\"\")\n    const [eva, setEva] = useState(\"\")\n    const [act, setAct] = useState(\"\")\n    const [id, setID] = useState(null)\n    // set variables for error msgs\n    const [displayError, setDisplayError] = useState(\"none\")\n    const [error, setError] = useState(\"\")\n    if (reflection) {\n        setEvent(reflection.event)\n        setDes(reflection.description)\n        setLearnt(reflection.learnt)\n        setMoodB(reflection.moodBefore.scale)\n        setMoodD(reflection.moodDuring.scale)\n        setMoodA(reflection.moodAfter.scale)\n        setComB(reflection.moodBefore.comments)\n        setComD(reflection.moodDuring.comments)\n        setComA(reflection.moodAfter.comments)\n        setEva(reflection.evaluation)\n        setCon(reflection.conclusion)\n        setAna(reflection.analysis)\n        setAct(reflection.actionPlan)\n    }\n    return (\n      <div style={reflectionStyle}>\n        <p>Write a reflection!!!</p>\n        <form>\n          <p>Event title: \n          <input \n            style={textBoxStyle}\n            placeholder=\"event\"\n            type=\"text\"\n            value={event}\n            onChange={(e) => {\n                setEvent(e.target.value)\n            }}\n          />\n          </p>\n          <p>What happened? </p>\n          <textarea \n            style={textBoxStyle}\n            value={des}\n            placeholder=\"description\"\n            onChange={(e) => {\n                setDes(e.target.value)\n            }}\n          />\n          <p>Action - What did you do in response: </p>\n          <textarea \n            style={textBoxStyle}\n            placeholder=\"actions\"\n            value={ana}\n            onChange={(e) => {\n                setAna(e.target.value)\n            }}\n          />\n          <p>Lessons Learnt: </p>\n          <textarea \n            style={textBoxStyle}\n            placeholder=\"what you learnt from this\"\n            value={learnt}\n            onChange={(e) => {\n                setLearnt(e.target.value)\n            }}\n          />\n          <MoodInput \n          text1=\"How did you feel before the event?\" \n          scale={moodB}\n          setScale={setMoodB}\n          setCom={setComB}\n          com={comB}\n          />\n          <MoodInput \n          text1=\"How did you feel during the event?\" \n          scale={moodD}\n          setScale={setMoodD}\n          setCom={setComD}\n          com={comD}\n          />\n          <MoodInput \n          text1=\"How did you feel after the event?\" \n          scale={moodA}\n          setScale={setMoodA}\n          setCom={setComA}\n          com={comA}\n          />\n          <p>Did you think you did a good job? </p>\n          <textarea \n            style={textBoxStyle}\n            placeholder=\"evaluation\"\n            value={eva}\n            onChange={(e) => {\n                setEva(e.target.value)\n            }}\n          />\n          <p>What would you do if it happened again? </p>\n          <textarea \n            style={textBoxStyle}\n            placeholder=\"action plan\"\n            value={act}\n            onChange={(e) => {\n                setAct(e.target.value)\n            }}\n          />\n          <p>Overall how did you think you went: </p>\n          <textarea\n            style={textBoxStyle} \n            placeholder=\"conclusion\"\n            type=\"text\"\n            value={con}\n            onChange={(e) => {\n                setCon(e.target.value)\n            }}\n          />\n          <ErrorMessage \n            display={displayError} \n            msg={error}\n          />\n          <button \n            title = \"Save\"\n            onClick={async (e) => {\n                e.preventDefault()\n                const newID = await submitReflection(reflectionUrl, id, \n                    event, des, learnt, \n                    moodB, moodD, moodA, \n                    comB, comD, comA,\n                    eva, ana, act, con\n                    )\n                if (newID && newID.msg) {\n                    // show error message\n                    setDisplayError(\"block\")\n                    setError(newID.msg)\n                    return\n                }\n                // ensure no error msg\n                setDisplayError(\"none\")\n                setError(\"\")\n                setID(newID)\n                console.log(\"newID\", newID)\n            }}\n          > \n            Save \n          </button>\n          <button \n            title = \"Back\"\n            onClick={async (e) => {\n                e.preventDefault()\n            }}\n          > \n            Back \n          </button>\n        </form>\n      </div>\n    );\n})\n\nconst ViewReflection = ({reflectionUrl, reflection, setChange}) => {\n    if (!reflection) {\n        return\n    }\n    const date = reflection.dateCreated\n    const event = reflection.event\n    const des = reflection.des\n    const learnt = reflection.learnt\n    const moodB = reflection.feelings.moodBefore.scale\n    const moodD = reflection.feelings.moodDuring.scale\n    const moodA = reflection.feelings.moodAfter.scale\n    const comB = reflection.feelings.moodBefore.comments\n    const comD = reflection.feelings.moodDuring.comments\n    const comA = reflection.feelings.moodAfter.comments\n    const ana = reflection.analysis\n    const eva = reflection.evaluation\n    const con = reflection.conclusion\n    const act = reflection.actionPlan\n    const id = reflection._id\n    return (\n      <div style={reflectionStyle}>\n          <p>{date.toString()}</p>\n          <p>{event}</p>\n          <p>{des}</p>\n          <p>Actions taken: {ana}</p>\n          <p>Lessons Learnt: {learnt}</p>\n          <p>Mood Before: {moodB}/10</p>\n          <p>{comB}</p>\n          <p>Mood During: {moodD}/10</p>\n          <p>{comD}</p>\n          <p>Mood After: {moodA}/10</p>\n          <p>{comA}</p>\n          <p>Evaluation: {eva}</p>\n          <p>Action Plan for next time: {act}</p>\n          <p>Conclusion: {con}</p>\n          <button \n            title = \"Edit\"\n            onClick={async (e) => {\n                e.preventDefault()\n            }}\n          > \n            Edit \n          </button>\n          <button \n            title = \"Delete\"\n            onClick={async (e) => {\n                e.preventDefault()\n                deleteReflection(reflectionUrl, id, setChange)\n            }}\n          > \n            Delete \n          </button>\n      </div>)\n}\n\nconst ViewReflectionSimple = ({reflectionUrl, reflection, setChange}) => {\n    if (!reflection) {\n        return\n    }\n    const date = reflection.dateCreated\n    const event = reflection.event\n    const id = reflection._id\n    return (\n      <div \n        style={reflectionStyle}\n      >\n          <p>{date.toString()}</p>\n          <p>{event}</p>\n          <button \n            title = \"View\"\n            onClick={async (e) => {\n                e.preventDefault()\n            }}\n          > \n            View Reflection\n          </button>\n          <button \n            title = \"Edit\"\n            onClick={async (e) => {\n                e.preventDefault()\n            }}\n          > \n            Edit \n          </button>\n          <button \n            title = \"Delete\"\n            onClick={async (e) => {\n                e.preventDefault()\n                deleteReflection(reflectionUrl, id, setChange)\n            }}\n          > \n            Delete \n          </button>\n      </div>)\n}\n\nconst ViewReflections = ({reflectionUrl}) => {\n    const [reflections, setReflections] = useState([])\n    const [reqData, setReqData] = useState(\"\")\n    try {\n        //  get Reflections from backend API\n        async function getReflections(url) {\n            const reflections = await getObject(url)\n            // update reflection array\n            setReflections(reflections)\n        }\n        useEffect(() => {\n            console.log(\"get Reflections...\")\n            setReflections([])\n            getReflections(reflectionUrl);\n            console.log(\"new refs\", reflections)\n        }, [reqData])\n    } catch (error) {\n        console.log(error)\n    }\n    return (<div style={reflectionStyle}>\n        Your Reflections:\n        {reflections.map((reflection) => \n          (<ViewReflectionSimple\n            reflection={reflection} \n            reflectionUrl={reflectionUrl} \n            setReflections={setReflections}\n            setChange={setReqData}\n            key={reflection._id}\n          />))}\n    </div>)\n}\n\nexport {ReflectionInput, ViewReflections, ViewReflection};","import React, {useState, useEffect} from 'react';\nimport { \n    makeNewPost, \n    patch, \n    getObject,\n    deleteObject\n} from '../fetch/generalFetch';\nimport { MoodInput } from './Mood';\nimport ErrorMessage from './Error'\n\nconst journalStyle = {\n    alignContent: 'center',\n    margin: 5,\n    padding: 5,\n    outline: \"thick solid white\",\n    backgroundColor: \"palegreen\",\n    overflow: 'scroll',\n}\n\nconst textBoxStyle = {\n    width: '95%',\n    height: '40',\n}\n\nasync function submitJournal(postUrl, id, title, entry, positives, scale, comments) {\n    console.log(\"patchjournal...\", title, entry, positives, scale)\n    const newEntryDetails = {\n        title: title,\n        entry: entry,\n        positives: positives,\n        mood: scale,\n        comments: comments\n    }\n    var newPost = null\n    if (id != null) {\n        postUrl+= \"/\" + id\n        newPost = await patch(postUrl, newEntryDetails)\n    } else {\n        newPost = await makeNewPost(postUrl, newEntryDetails)\n    }\n    if (newPost.msg) {\n        return newPost\n    }\n    id = newPost._id\n    return id\n}\nasync function deleteJournal(url, id, setChange) {\n    console.log(\"deletejournal...\", url, id)\n    if (id != null) {\n        url+= \"/\" + id\n        const result = await deleteObject(url)\n        if (Array.isArray(result)) {\n            setChange(id)\n            return result\n        }\n    } \n    return []\n}\nconst JournalInput = React.memo(({journalUrl, journal}) => {\n    const [title, setTitle] = useState(\"\")\n    const [entry, setEntry] = useState(\"\")\n    const [positives, setPositives] = useState(\"\")\n    const [mood, setMood] = useState(0)\n    const [com, setCom] = useState(\"\")\n    const [id, setID] = useState(null)\n    const [displayError, setDisplayError] = useState(\"none\")\n    const [error, setError] = useState(\"\")\n    if (journal) {\n        setTitle(journal.title)\n        setEntry(journal.entry)\n        setMood(journal.mood.scale)\n        setCom(journal.mood.comments)\n        setPositives(journal.positives)\n    }\n    return (\n      <div style={journalStyle}>\n        <form>\n          <p>Entry Title: \n          <input \n            type=\"text\"\n            style={textBoxStyle}\n            value={title}\n            onChange={(e) => {\n                setTitle(e.target.value)\n            }}\n          />\n          </p>\n          <p>Your Entry: </p>\n          <textarea \n            style={textBoxStyle}\n            value={entry}\n            onChange={(e) => {\n                setEntry(e.target.value)\n            }}\n          />\n          <p>What were the positives? </p>\n          <textarea \n            style={textBoxStyle}\n            value={positives}\n            onChange={(e) => {\n                setPositives(e.target.value)\n            }}\n          />\n          <MoodInput \n          text1=\"How did you feel\" \n          scale={mood}\n          setScale={setMood}\n          setCom={setCom}\n          com={com}\n          />\n          <p/>\n          <ErrorMessage \n            display={displayError} \n            msg={error}\n          />\n          <button \n            title = \"Save\"\n            onClick={async (e) => {\n                e.preventDefault()\n                const newID = await submitJournal(journalUrl, id, title, entry, positives, mood, com)\n                if (newID && newID.msg) {\n                    // show error message\n                    setDisplayError(\"block\")\n                    setError(newID.msg)\n                    return\n                }\n                // ensure no error msg\n                setDisplayError(\"none\")\n                setError(\"\")\n                setID(newID)\n                console.log(\"newID\", newID)\n            }}\n          > \n            Save \n          </button>\n          <button \n            title = \"Back\"\n            onClick={async (e) => {\n                e.preventDefault()\n            }}\n          > \n            Back \n          </button>\n        </form>\n      </div>\n    );\n})\n\nconst ViewJournal = ({journalUrl, journal, setChange}) => {\n    if (!journal) {\n        return\n    }\n    const date = journal.dateCreated\n    const title = journal.title\n    const mood = journal.mood.scale\n    const entry = journal.entry\n    const positives = journal.positives\n    const id = journal._id\n    return (\n      <div style={journalStyle}>\n          <p>{date.toString()}</p>\n          <p>{title}</p>\n          <p>Mood: {mood}/10 </p>\n          <p>Entry: {entry}</p>\n          <p>Positives: {positives}</p>\n          <button \n            title = \"Edit\"\n            onClick={async (e) => {\n                e.preventDefault()\n            }}\n          > \n            Edit \n          </button>\n          <button \n            title = \"Delete\"\n            onClick={async (e) => {\n                e.preventDefault()\n                deleteJournal(journalUrl, id, setChange)\n            }}\n          > \n            Delete \n          </button>\n      </div>)\n}\n\nconst ViewJournalSimple = ({journalUrl, journal, setChange}) => {\n    if (!journal) {\n        return\n    }\n    const date = journal.dateCreated\n    const title = journal.title\n    const mood = journal.mood.scale\n    const id = journal._id\n    return (\n      <div \n        style={journalStyle}\n      >\n          <p>{date.toString()}</p>\n          <p>{title}</p>\n          <p>Mood: {mood}/10 </p>\n          <button \n            title = \"View\"\n            onClick={async (e) => {\n                e.preventDefault()\n            }}\n          > \n            View Journal\n          </button>\n          <button \n            title = \"Edit\"\n            onClick={async (e) => {\n                e.preventDefault()\n            }}\n          > \n            Edit \n          </button>\n          <button \n            title = \"Delete\"\n            onClick={async (e) => {\n                e.preventDefault()\n                deleteJournal(journalUrl, id, setChange)\n            }}\n          > \n            Delete \n          </button>\n      </div>)\n}\n\nconst ViewJournals = ({journalUrl}) => {\n    const [journals, setJournals] = useState([])\n    const [reqData, setReqData] = useState(\"\")\n    try {\n        //  get Journals from backend API\n        async function getJournals(url) {\n            const journals = await getObject(url)\n            // update journals array\n            setJournals(journals)\n        }\n        useEffect(() => {\n            console.log(\"getJournal...\")\n            setJournals([])\n            getJournals(journalUrl);\n            console.log(\"new journals\", journals)\n        }, [reqData])\n    } catch (error) {\n        console.log(error)\n    }\n    return (<div style={journalStyle}>\n        Your Journals:\n        {journals.map((journal) => \n          (<ViewJournalSimple\n            journal={journal} \n            journalUrl={journalUrl} \n            setJournals={setJournals}\n            setChange={setReqData}\n            key={journal._id}\n          />))}\n    </div>)\n}\n\nexport {JournalInput, ViewJournals, ViewJournal};","import React from 'react'\nimport {makeNewPost} from '../fetch/generalFetch'\nimport url from './url'\nimport {\n  BrowserRouter as Router,\n  Link,\n  Route,\n  Switch,\n} from 'react-router-dom';\nimport LoginHome from './LoginHome'\nimport history from './history'\n\nasync function logout() {\n    const loggedout = await makeNewPost(url+\"user/logout\", {})\n    return loggedout\n}\n\nconst Logout = ({url}) => {\n    return (\n      <div>\n        <Switch>\n          <Link to={{pathname: '/logout'}}>\n            <button \n              title = \"Logout\"\n              onClick={async (e) => {\n                  e.preventDefault()\n                  const loggedout = await logout(url)\n                  console.log(loggedout)\n                  // clear tokens\n                  sessionStorage.removeItem('authToken')\n                  sessionStorage.removeItem('refreshToken')\n                  // return to login/signup page\n                  history.push('/login')\n              }}\n            > \n              Log out\n            </button>\n          </Link>{' '}\n          <Route path=\"/login\"component={() => <LoginHome url={url}/>}/>\n        </Switch>\n      </div>\n    )\n}\n\nexport default Logout\n\n","import {\n    BrowserRouter as Router,\n    Link,\n    Route,\n    Switch,\n  } from 'react-router-dom';\nimport React, {useState, useEffect} from 'react';\nimport { ViewMoods, MoodForm } from './Mood';\nimport { ViewPet, ViewPetSimple } from './Pet';\nimport {ViewReflections, ReflectionInput } from './Reflection';\nimport {ViewJournals,ViewJournal,JournalInput} from './Journal'\nimport LoginHome from './LoginHome';\nimport Logout from './Logout';\nimport { getObject } from '../fetch/generalFetch';\n \nconst PetStyle = {\n  margin: 20,\n  padding: 5,\n  color: 'black',\n  textDecoration: 'none',\n  backgroundColor: 'lightcoral',\n  outline: 'thin solid black'\n}\n\nconst JournalStyle = {\n  margin: 20,\n  padding: 5,\n  color: 'black',\n  textDecoration: 'none',\n  backgroundColor: 'palegreen',\n  outline: 'thin solid black'\n}\n\nconst ReflectionStyle = {\n  margin: 20,\n  padding: 5,\n  color: 'black',\n  textDecoration: 'none',\n  backgroundColor:\"lavender\",\n  outline: 'thin solid black'\n}\n\nconst MoodStyle = {\n  margin: 20,\n  padding: 5,\n  color: 'black',\n  textDecoration: 'none',\n  backgroundColor:'paleturquoise',\n  outline: 'thin solid black'\n}\n\nconst NavStyle = {\n  margin: 20,\n  padding: 5,\n  display: 'flex',\n  flexDirection: 'column',\n  overflow: 'scroll',\n}\nconst DisplayStyle = {\n  margin: 20,\n  padding: 5,\n  display: 'flex',\n  flexDirection: 'row',\n  overflow: 'scroll'\n}\n\n\nconst Home = ({url}) => {\n  const [buttonPressed, setButtonPressed] = useState(false)\n  const [view, setView] = useState(\"block\")\n  const [renders, setRenders] = useState(0)\n  const [name, setName] = useState(\"\")\n  const [points, setPoints] = useState(0)\n  useEffect(() => {\n    if (renders == 0) {\n      setView(\"block\")\n    } else {\n      setView(\"none\")\n    }\n}, [buttonPressed])\n  function onclick() {\n    setRenders(renders+1)\n    setButtonPressed(!buttonPressed)\n  }\n  try {\n    async function getUserDetails(url){\n      const user = await getObject(url+\"user\")\n      if (!user) {\n        return\n      }\n      setName(user.name)\n      setPoints(user.remainingPoints)\n      return user\n    }\n    useEffect(() => {\n      getUserDetails(url)\n    }, [buttonPressed])\n  } catch (err){\n      console.log(err)\n  }\n  return (\n    <div style={DisplayStyle}>\n      \n    <Router>   \n      <div style={NavStyle}>\n      <p>Welcome back {name}!!!</p>\n      <p>You have {points} food to feed your pet!</p>\n      <Link to={{pathname: '/pet'}} style={PetStyle} onClick={onclick}>View Pet</Link>{' '}\n      <Link to={{pathname: '/pet'}} style={PetStyle} onClick={onclick}>Feed Pet</Link>{' '}\n      <Link to={{pathname: '/journals'}} style={JournalStyle} onClick={onclick}>Journals</Link>{' '}\n      <Link to={{pathname: '/newjournal'}} style={JournalStyle} onClick={onclick}>New Journal</Link>{' '}\n      <Link to={{pathname: '/reflections'}} style={ReflectionStyle} onClick={onclick}>Reflections</Link>{' '}\n      <Link to={{pathname: '/newreflection'}} style={ReflectionStyle} onClick={onclick}>New Reflection</Link>{' '}        \n      <Link to={{pathname: '/moods'}} style={MoodStyle}>Mood</Link>{' '}\n      <Link to={{pathname: '/newmood'}} style={MoodStyle} onClick={onclick}>New Mood</Link>{' '}\n      <Logout url={url}/>\n      </div> \n      <div style={DisplayStyle}>\n      <Switch>\n        <Route path=\"/pet\"component={() => <ViewPet petUrl={url+\"pet\"}/>}/>\n        <Route path=\"/journals\" component={() => <ViewJournals journalUrl={url+\"journal\"}/>}/>\n        <Route path=\"/newjournal\"component={() => <JournalInput petUrl={url+\"journal\"}/>}/>\n        <Route path=\"/reflections\"component={() => <ViewReflections reflectionUrl={url+\"reflection\"}/>}/>\n        <Route path=\"/newreflection\"component={() => <ReflectionInput reflectionUrl={url+\"reflection\"}/>}/>\n        <Route path=\"/moods\"component={() => <ViewMoods moodUrl={url+\"moods\"}/>}/>\n        <Route path=\"/newmood\"component={() => <MoodForm moodUrl={url+\"moods\"}/>}/>\n        <Route path=\"/login\"component={() => <LoginHome url={url}/>}/>\n      </Switch>\n      </div>   \n      <div style={{display: view}}>\n        <ViewPetSimple petUrl={url+\"pet\"}/>\n      </div>\n    </Router>\n    </div>\n  )};\nexport default Home;","import React, {useState} from 'react';\nimport 'rc-slider/assets/index.css';\nimport { \n    makeNewPost\n} from '../fetch/generalFetch';\nimport ErrorMessage from './Error'\nimport {\n  BrowserRouter as Router,\n  Link,\n  Route,\n  Switch,\n} from 'react-router-dom';\nimport Home from './Home'\nimport history from './history'\n\nconst signUpStyle = {\n    alignContent: 'center',\n    margin: 5,\n    padding: 5,\n    backgroundColor: \"orange\",\n    alignSelf: 'center'\n}\n\nconst reqStyle = {\n    fontSize: \"smaller\",\n    fontWeight: \"lighter\",\n}\n\nasync function submitSignUp(postUrl, name, email, password) {\n    console.log(\"patchjournal...\", name, email,password)\n    const signUpDetails = {\n        name: name,\n        email: email,\n        password: password\n    }\n    const signUp = await makeNewPost(postUrl, signUpDetails)\n    return (signUp)\n}\n\nconst SignUpForm= React.memo(({url}) => {\n    const [name, setName] = useState(\"\")\n    const [email, setEmail] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [displayError, setDisplayError] = useState(\"none\")\n    const [error, setError] = useState(\"\")\n    return (\n      <div style={signUpStyle}>\n        <form>\n          <p>Name:\n          <input \n            type=\"text\"\n            onChange={(e) => {\n                setName(e.target.value)\n            }}\n          />\n          </p>\n          <p>Email: \n          <input \n            type=\"text\"\n            onChange={(e) => {\n                setEmail(e.target.value)\n            }}\n          />\n          </p>\n          <p>Password: \n          <input \n            type=\"password\"\n            onChange={(e) => {\n                setPassword(e.target.value)\n            }}\n          />\n          </p>\n          <p style={reqStyle}>Must be at least 6 characters long</p>\n          <ErrorMessage \n            display={displayError} \n            msg={error}\n          />\n          <div>\n            <Switch>\n              <Link to={{pathname: '/home'}}>\n                <button \n                  onClick={async (e) => {\n                    e.preventDefault()\n                    const user = await submitSignUp(url,name,email,password)\n                    console.log(\"user\", user)\n                    // invalid login details\n                    if (user.msg) {\n                      setDisplayError(\"block\")\n                      setError(user.msg)\n                      return\n                    }\n                    setDisplayError(\"none\")\n                    sessionStorage.setItem('authToken', user[\"authToken\"])\n                    sessionStorage.setItem('refreshToken', user[\"refreshToken\"])\n                    history.push('/home')\n                  }}\n                > \n                  Sign Up\n                </button>\n                </Link>\n                <Route path=\"/home\" component={() => <Home baseUrl={url}/>}/>\n              </Switch>\n            </div>\n        </form>\n      </div>\n    );\n})\n\n\n\n\nexport default SignUpForm;","import React, {useState} from 'react';\nimport {\n  Link,\n  Route,\n  Switch,\n} from 'react-router-dom';\nimport 'rc-slider/assets/index.css';\nimport { \n    makeNewPost\n} from '../fetch/generalFetch';\nimport ErrorMessage from './Error'\nimport Home from './Home'\nimport history from './history'\n\nconst loginStyle = {\n    alignContent: 'center',\n    alignItems: 'center',\n    margin: 5,\n    padding: 5,\n    backgroundColor: \"cornsilk\",\n    alignSelf: 'center',\n    display:'flex',\n}\n\nasync function submitLogin(postUrl, email, password) {\n    console.log(\"patchjournal...\",email, password)\n    const loginDetails = {\n        email: email,\n        password: password\n    }\n    const login = await makeNewPost(postUrl, loginDetails)\n    return (login)\n}\n\nconst LoginForm= React.memo(({baseUrl, url, setLoggedIn}) => {\n    const [email, setEmail] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [displayError, setDisplayError] = useState(\"none\")\n    const [error, setError] = useState(\"\")\n    async function login() {\n      const user = await submitLogin(url, email, password)\n        console.log(\"user:\")\n        console.log(user)\n        // invalid login details\n        if (user && user.msg) {\n            console.log(\"login failed\")\n            setDisplayError(\"block\")\n            setError(user.msg)\n            return false\n        }\n        if (user && user[\"authToken\"] && user[\"refreshToken\"]) {\n            setDisplayError(\"none\")\n            setError(\"\")\n            setLoggedIn(true)\n            sessionStorage.setItem('authToken', user[\"authToken\"])\n            sessionStorage.setItem('refreshToken', user[\"refreshToken\"])\n            return true\n        }\n        setDisplayError(\"block\")\n        setError(\"Unknown error occurred\")\n        return false\n    }\n    return (\n      <div style={loginStyle}>\n        <form>\n          <p>Email: \n          <input \n            type=\"text\"\n            onChange={(e) => {\n                setEmail(e.target.value)\n            }}\n          />\n          </p>\n          <p>Password: \n          <input \n            type=\"password\"\n            onChange={(e) => {\n                setPassword(e.target.value)\n            }}\n          />\n          </p>\n          <ErrorMessage display={displayError} msg={error}/>\n          <div>\n          <Switch>\n            <Link to={{pathname: '/home'}}>\n            <button \n              onClick={async (e) => {\n                console.log(\"button clicked\")\n                e.preventDefault()\n                const loggedIn = await login()\n                console.log(\"loggin:\", loggedIn)\n                if (!loggedIn) {\n                    console.log(\"not loggedin...\", loggedIn)\n                    return\n                }\n                console.log(\"going home\")\n                history.push('/home')\n                console.log(\"loggedin\". loggedIn)\n            }}\n            > \n              Login\n            </button>\n            </Link>{' '}\n              <Route exact path=\"/home\" component={() => <Home url={baseUrl}/>}/>\n          </Switch>\n          </div>\n        </form>\n      </div>\n    );\n})\n\n\n\n\nexport default LoginForm;","import {\n    BrowserRouter as Router,\n    Link,\n    Route,\n    Switch,\n  } from 'react-router-dom';\nimport React, {useState, useEffect} from 'react';\nimport SignUpForm from './Signup'\nimport LoginForm from './Login'\nimport { ViewMoods, MoodForm } from './Mood';\nimport { ViewPet } from './Pet';\nimport {ViewReflections, ReflectionInput } from './Reflection';\nimport {ViewJournals,ViewJournal,JournalInput} from './Journal'\nimport Home from './Home'\n\nconst CenterStyle = {\n  alignItems:'center',\n  alignContent:'center',\n  justifyContent:'center',\n  display:'flex',\n}\n\nconst LoginHomeStyle = (display) => {\n  console.log(\"display,\", display)\n  if (!display) {\n    display = \"block\"\n  }\n  return ({\n    alignContent: 'center',\n    margin: 5,\n    padding: 5,\n    color: 'black',\n    textDecoration: 'none',\n    backgroundColor: \"cornsilk\",\n    outline: 'thin solid black'\n  })\n}\nconst SignUpHomeStyle = (display) => {\n  if (!display) {\n    display = \"block\"\n  }\n  return ({\n    alignContent: 'center',\n    margin: 5,\n    padding: 5,\n    color: 'black',\n    textDecoration: 'none',\n    backgroundColor: \"orange\",\n    outline: 'thin solid black',\n    display: display\n  })\n}\n \nconst CompStyle = {\n    alignItems:'center',\n    alignContent:'center',\n    justifyContent:'center',\n    display:'flex',\n    flexDirection: 'column'\n}\n\nconst LoginHome = ({url}) => {\n  const [display, setDisplay] = useState(\"block\")\n  const [loggedIn, setLoggedIn] = useState(false)\n  useEffect(() => {\n    if (loggedIn == true) {\n      setDisplay(\"none\")\n      console.log(\"loggedin...\")\n    }\n}, [loggedIn])\n  return (\n    <div style={CompStyle}>\n      <div style={CenterStyle}>\n        <Link to={{pathname: '/login'}} style={LoginHomeStyle(display)}>Login</Link>{' '}\n        <Link to={{pathname: '/signup'}} style={SignUpHomeStyle(display)}>Sign Up</Link>{' '}\n      </div>\n        <Switch>\n            <Route path=\"/login\" component={() => <LoginForm baseUrl={url} url={url+\"user/login\"} setLoggedIn={setLoggedIn}/>}/>\n            <Route path=\"/signup\"component={() => <SignUpForm baseUrl={url} url={url+\"user/signup\"} setLoggedIn={setLoggedIn}/>}/>\n            <Route exact path=\"/home\" component={() => <Home url={url}/>}/>\n        </Switch>\n      </div>\n  )};\nexport default LoginHome;","import React from 'react';\nimport background from './assets/StartingBackground.png';\nimport LoginHome from './components/LoginHome'\nimport { BrowserRouter } from 'react-router-dom';\nconst url = process.env.REACT_APP_API_URL || \"http://localhost:5000/api/\"\nconst style = {  \n  backgroundImage: \"url(\" + background + \")\",\n  backgroundPosition: 'center',\n  backgroundSize: 'cover',\n  backgroundRepeat: 'no-repeat',\n  height: '100%',\n  width: '100%',\n  position: 'absolute',\n  padding: 10,\n  display: 'flex',\n  flexDirection:'column',\n  //justifyContent: 'center',\n  opacity: 0.8,\n  overflow: 'scroll'\n}\n\nconst header_style = {\n  alignContent:'center',\n  alignItems: 'center',\n  display:'flex',\n  flexDirection:'column'\n}\n\nfunction App() {\n  return (\n    <div \n      style={style}\n    >\n      <h1 style={header_style}>My Secret Garden</h1>\n      <div>\n      <BrowserRouter>\n        <LoginHome url={url}/>\n      </BrowserRouter>\n      </div>\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}