{"version":3,"sources":["assets/StartingBackground.png","assets/egg.png","assets/baby.png","assets/toddler.png","assets/teen.png","assets/adult.png","components/LoginHome.js","fetch/params.js","fetch/generalFetch.js","components/Error.js","components/history.js","components/Mood.js","components/Image.js","components/Pet.js","components/Reflection.js","components/Journal.js","components/Logout.js","components/NavBar.js","components/Signup.js","components/Login.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","CenterStyle","alignItems","alignContent","justifyContent","display","LoginHomeStyle","loggedIn","margin","padding","color","textDecoration","backgroundColor","outline","SignUpHomeStyle","CompStyle","flexDirection","LoginHome","url","style","to","pathname","getHeader","Accept","sessionStorage","getItem","getGETParams","getPOSTParams","post","JSON","stringify","getPATCHParams","patch","getDELETEParams","makeNewPost","a","res","console","log","fetch","json","getObject","toPatch","deleteObject","errorStyle","fontSize","ErrorMessage","msg","replace","history","createHashHistory","forceRefresh","moodStyle","overflow","moodSlider","position","submitMood","postUrl","id","scale","comments","newMood","mood","newPost","_id","MoodForm","React","memo","moodUrl","setUserChange","useState","setScale","com","setCom","setID","MoodInput","text1","title","onClick","e","preventDefault","newID","random","Math","toString","substring","push","min","max","value","onChange","type","target","ViewMood","date","dateCreated","des","description","ViewMoods","moods","setMoods","getMoods","useEffect","error","map","key","Image","src","alt","width","height","petStates","egg","baby","toddler","teen","adult","petStyle","alignSelf","textAlign","infoStyle","imageStyle","visibility","imageHeight","floor","window","innerHeight","differenceInDays","day1","day2","date1","Date","date2","days","round","abs","Number","isInteger","submitPetName","name","setChange","newName","newPet","submitPetFood","food","feed","ViewPet","petUrl","status","setStatus","setName","level","setLevel","health","setHealth","setDays","foodToLevelUp","setFoodToLevelUp","overallFoodIntake","setOverallFoodIntake","foodNextLevel","setFoodNextLevel","setNewName","setPet","reqData","setReqData","setFeed","getPet","pet","born","foodRequiredToLevelUp","now","pattern","ViewPetSimple","reflectionStyle","textBoxStyle","submitReflection","event","learnt","scaleB","scaleD","scaleA","comB","comD","comA","eva","ana","act","con","extended","newEntryDetails","moodBefore","moodDuring","moodAfter","commentsBefore","commentsDuring","commentsAfter","evaluation","actions","actionPlan","conclusion","deleteReflection","result","Array","isArray","ReflectionInput","reflectionUrl","reflection","setEvent","setDes","setLearnt","moodB","setMoodB","moodD","setMoodD","moodA","setMoodA","setComB","setComD","setComA","setAna","setCon","setEva","setAct","displayError","setDisplayError","setError","reflectionId","useParams","feelings","analysis","getReflection","err","placeholder","Error","goBack","ViewReflection","useLocation","setDate","path","component","ViewReflectionSimple","exact","ViewReflections","reflections","setReflections","getReflections","journalStyle","submitJournal","entry","positives","deleteJournal","JournalInput","journalUrl","journal","setTitle","setEntry","setPositives","setMood","journalId","getJournal","ViewJournal","params","comm","setComm","journalObject","ViewJournalSimple","ViewJournals","journals","setJournals","getJournals","logout","loggedout","Logout","setLoggedIn","removeItem","PetStyle","JournalStyle","ReflectionStyle","MoodStyle","NavStyle","DisplayStyle","ComponentStyle","BoxStyle","TitleStyle","QuoteStyle","quote","NavBar","points","setPoints","change","author","quoteAvailable","getUserDetails","user","remainingPoints","signUpStyle","reqStyle","fontWeight","submitSignUp","email","password","signUpDetails","signUp","SignUpForm","setEmail","setPassword","setItem","baseUrl","loginStyle","submitLogin","loginDetails","login","LoginForm","process","backgroundImage","background","backgroundPosition","backgroundSize","backgroundRepeat","opacity","header_style","columnStyle","unauthorisedStyle","authorisedStyle","App","loggedInPath","Login","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.5e7c2385.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/StartingBackground.6cb4e8f9.png\";","module.exports = __webpack_public_path__ + \"static/media/egg.2b73145f.png\";","module.exports = __webpack_public_path__ + \"static/media/baby.54153fc8.png\";","module.exports = __webpack_public_path__ + \"static/media/toddler.23e805ae.png\";","module.exports = __webpack_public_path__ + \"static/media/teen.6275f614.png\";","module.exports = __webpack_public_path__ + \"static/media/adult.5327aaaa.png\";","import { Link } from 'react-router-dom';\nimport React from 'react';\n\nconst CenterStyle = {\n  alignItems:'center',\n  alignContent:'center',\n  justifyContent:'center',\n  display:'flex',\n}\n\nconst LoginHomeStyle = (loggedIn) => {\n  var display = \"block\"\n  if (loggedIn === false) {\n      display = \"none\"\n  }\n  return ({\n    alignContent: 'center',\n    margin: 5,\n    padding: 5,\n    color: 'black',\n    textDecoration: 'none',\n    backgroundColor: \"cornsilk\",\n    outline: 'thin solid black',\n    display: display\n  })\n}\nconst SignUpHomeStyle = (loggedIn) => {\n  var display = \"block\"\n  if (loggedIn === false) {\n      display = \"none\"\n  }\n  return ({\n    alignContent: 'center',\n    margin: 5,\n    padding: 5,\n    color: 'black',\n    textDecoration: 'none',\n    backgroundColor: \"orange\",\n    outline: 'thin solid black',\n    display: display\n  })\n}\n \nconst CompStyle = {\n    alignItems:'center',\n    alignContent:'center',\n    justifyContent:'center',\n    display:'flex',\n    flexDirection: 'column'\n}\n\nconst LoginHome = ({url, display}) => {\n  return (\n    <div style={CompStyle}>\n      <div style={CenterStyle}>\n        <Link to={{pathname: '/login'}} style={LoginHomeStyle(display)}>Login</Link>{' '}\n        <Link to={{pathname: '/signup'}} style={SignUpHomeStyle(display)}>Sign Up</Link>{' '}\n      </div>\n    </div>\n    \n  )};\nexport default LoginHome;","function getHeader() {\n    return({\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": sessionStorage.getItem('authToken')\n    })\n}\n\nfunction getRefreshHeader() {\n    return({\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        \"refresh-token\": sessionStorage.getItem('refreshToken')\n    })\n}\n\nfunction getRefreshParams() {\n    return({\n        \"method\": \"GET\",\n        \"headers\": getRefreshHeader()\n    })\n}\n\nfunction getGETParams() {\n    return({\n        \"method\": \"GET\",\n        \"headers\": getHeader()\n    })\n}\n\nfunction getPOSTParams(post) {\n    return({\n        \"method\": \"POST\",\n        \"headers\": getHeader(),\n        \"body\": JSON.stringify({\n            \"post\": post\n        })\n    })\n}\n\nfunction getPATCHParams(patch) {\n    return({\n        \"method\": \"PATCH\",\n        \"headers\": getHeader(),\n        \"body\": JSON.stringify({\n            \"post\": patch\n        })\n    })\n}\n\nfunction getDELETEParams() {\n    return({\n        \"method\": \"DELETE\",\n        \"headers\": getHeader()\n    })\n}\n\n\nexport { \n    getGETParams, \n    getPOSTParams, \n    getPATCHParams, \n    getDELETEParams,\n    getRefreshParams\n}","import { \n    getPOSTParams, \n    getGETParams, \n    getPATCHParams, \n    getDELETEParams,\n    getRefreshParams\n} from './params'\n\nasync function makeNewPost(url, post) {\n    // get list of items\n    let res = null;\n    try {\n        console.log(url, post)\n        res = await fetch(url, getPOSTParams(post))\n        res = await res.json()\n        return res\n    } catch (err) {\n        console.log(\"POST Error:\", err);\n        return err\n    }\n}\n\nasync function getObject(url) {\n    // get items\n    let res = null;\n    try {\n        console.log(\"getting object\", url)\n        res = await fetch(url, getGETParams())\n        res = await res.json()\n        return res\n    } catch (err) {\n        console.log(\"GET Error:\", err);\n    }\n}\n\nasync function patch(url, toPatch) {\n    // update specific field (field given in url)\n    let res = null;\n    try {\n        res = await fetch(url, getPATCHParams(toPatch))\n        res = await res.json()\n        return res\n    } catch (err) {\n        console.log(\"PATCH Error:\", err);\n    }\n}\n\nasync function deleteObject(url) {\n    // delete object\n    let res = null;\n    try {\n        res = await fetch(url, getDELETEParams())\n        res = await res.json()\n        return res\n    } catch (err) {\n        console.log(\"DELETE Error:\", err);\n    }\n}\n\nasync function getNewToken(url) {\n    // get list of items\n    let res = null;\n    try {\n        await fetch(url, getRefreshParams())\n        res = await res.json()\n        return res\n    } catch (err) {\n        console.log(\"GET Error:\", err);\n        return err\n    }\n}\n\nexport { \n    makeNewPost, \n    getObject, \n    patch, \n    deleteObject,\n    getNewToken\n}","import React from 'react'\n\nconst errorStyle = (display) => {\n    return {\n        color: 'red',\n        display: display,\n        fontSize: \"smaller\",\n    }\n}\n\nconst ErrorMessage = ({msg, display}) => {\n    msg = msg.replace(/\"/g, \"\")\n    return (\n      <div>\n        <p style={errorStyle(display)}>{msg}</p>\n      </div>\n    )\n}\n\nexport default ErrorMessage\n\n","import {createHashHistory} from 'history'\nconst history = createHashHistory({forceRefresh:true})\nexport default history","import React, {useState, useEffect} from 'react';\nimport Slider from 'rc-slider';\nimport 'rc-slider/assets/index.css';\nimport { \n    makeNewPost, \n    patch, \n    getObject\n} from '../fetch/generalFetch';\nimport history from './history'\n\nconst moodStyle = {\n    alignContent: 'center',\n    margin: 10,\n    padding: 5,\n    outline: \"thick solid paleturquoise\",\n    backgroundColor: \"paleturquoise\",\n    overflow: 'scroll',\n}\n\nconst moodSlider = {\n    position: 'inherit',\n}\n\nasync function submitMood(postUrl, id, scale, comments) {\n    console.log(\"patchmood...\", scale, comments, id)\n    const newMood = {\n        mood: scale,\n        comments: comments\n    }\n    var newPost = null\n    if (id != null) {\n        postUrl+= \"/\" + id\n        newPost = await patch(postUrl, newMood)\n    } else {\n      console.log(\"new post...\", postUrl, newMood)  \n      newPost = await makeNewPost(postUrl, newMood)\n    }\n    if (newPost) {\n        console.log(newPost)\n        id = newPost._id\n        return id\n    }\n}\n\n// wrapper around mood input section\nconst MoodForm = React.memo(({moodUrl, setUserChange}) => {\n  const [scale, setScale] = useState(0)\n  const [com, setCom] = useState(\"\")\n  const [id, setID] = useState(null)\n  return (\n    <div style={moodStyle}>\n      <form>\n        <MoodInput \n          text1=\"How are you feeling today?\" \n          scale={scale}\n          setScale={setScale}\n          setCom={setCom}\n          com={com}\n        />\n        <p/>\n        <button \n          title = \"Save\"\n          onClick={async (e) => {\n              e.preventDefault()\n              const newID = await submitMood(moodUrl, id, scale, com)\n              setID(newID)\n              const random = Math.random().toString(36).substring(2, 15)\n              setUserChange(random)\n              console.log(\"newID\", newID)\n              history.push('/home/moods')\n          }}\n        > \n          Save \n        </button>\n        <button \n            title = \"Back\"\n            onClick={async (e) => {\n                e.preventDefault()\n                history.push('/home/moods')\n            }}\n          > \n            Back \n        </button>\n      </form>\n    </div>\n  )\n})\n\nconst MoodInput = React.memo(({text1, scale, setScale, setCom, com}) => {\n    /*const [scale, setScale] = useState(0)\n    const [com, setCom] = useState(\"\")\n    const [id, setID] = useState(null)*/\n    return (\n      <div style={moodStyle}>\n        <p>{text1}</p>\n        <div style={moodSlider}>\n          <Slider\n            min={-1}\n            max={10}\n            value={scale}\n            onChange={(value) => {\n            setScale(value)\n            }}\n          />\n          <p>{scale}</p>\n        </div>\n        <p>Comments:\n        <input \n          type=\"text\"\n          value={com}\n          onChange={(e) => {\n            setCom(e.target.value)\n          }}\n        />\n        </p>\n      </div>\n    );\n})\n\nconst ViewMood = ({mood}) => {\n    if (!mood) {\n        return\n    }\n    const date = mood.dateCreated\n    const scale = mood.scale\n    const des = mood.description\n    const id = mood._id\n    /*\n    const parent = mood.parent.id\n    var journal = false\n    var reflection = false\n    if (parent) {\n        if (mood.parent.reflection == true) {\n          reflection = true\n        }\n        if (mood.parent.journal == true) {\n          journal = true\n        }\n    }*/\n    return (\n      <div style={moodStyle}>\n          <p>{date.toString()}</p>\n          <p>Mood: {scale}/10 </p>\n          <p>{des}</p>\n      </div>)\n}\n\nconst ViewMoods = ({moodUrl}) => {\n    const [moods, setMoods] = useState([])\n    try {\n        //  get Moods from backend API\n        async function getMoods(url) {\n            const moods = await getObject(url)\n            // update moods array\n            setMoods(moods)\n        }\n        useEffect(() => {\n          getMoods(moodUrl);\n        }, [])\n    } catch (error) {\n        console.log(error)\n    }\n    return (<div style={moodStyle}>\n        Your Moods:\n        {moods.map((mood) => (<ViewMood mood={mood} key={mood._id}/>))}\n    </div>)\n}\n\nexport {MoodInput, ViewMoods, ViewMood, MoodForm};","import React from 'react'\n\nconst Image = ({src, alt, width, height, style}) => {\n    return (\n      <div>\n        <img \n          src={src} \n          alt={alt}\n          width={width}\n          height={height}\n          style={style}\n        />\n      </div>\n    )\n}\n\nexport default Image\n","import React, {useState, useEffect} from 'react';\nimport { \n    makeNewPost, \n    patch, \n    getObject\n} from '../fetch/generalFetch';\nimport Image from './Image'\nimport egg from '../assets/egg.png'\nimport baby from '../assets/baby.png'\nimport toddler from '../assets/toddler.png'\nimport teen from '../assets/teen.png'\nimport adult from '../assets/adult.png'\n\nconst petStates = [egg, baby, toddler, teen, adult]\n\nconst petStyle = {\n    alignContent: 'center',\n    margin: 5,\n    padding: 5,\n    alignSelf: 'center',\n    textAlign: 'center'\n}\n\nconst infoStyle = {\n    backgroundColor: \"lightcoral\",\n    padding: 3,\n}\n\nconst imageStyle = {\n    padding: 5,\n    margin: 5,\n    alignContent: 'center',\n    display: 'block',\n    visibility: 'visible',\n}\n\nconst imageWidth = \"auto\"\nconst imageHeight = Math.floor(window.innerHeight / 2)\n\nfunction differenceInDays(day1, day2) {\n    const date1 = new Date (day1)\n    const date2 = new Date (day2)\n    const days = Math.round(Math.abs(date1 - date2) / (1000 * 3600 * 24))\n    if (Number.isInteger(days)) {\n        return days\n    }\n    return 0\n}\n\nasync function submitPetName(postUrl, name, setChange) {\n    const newName = {\n        name: name\n    }\n    postUrl+= \"/name\"\n    const newPet = await patch(postUrl, newName)\n    if (newPet) {\n        setChange(newPet)\n        return newPet\n    }\n}\n\nasync function submitPetFood(postUrl, food, setChange) {\n    const feed = {\n        food: food\n    }\n    const newPet = await makeNewPost(postUrl, feed)\n    if (newPet) {\n        setChange(newPet)\n        return newPet\n    }\n}\n\nconst PetNameInput = ({petUrl, name, setName, setChange}) => {\n    return (\n      <div style={petStyle}>\n      <input type=\"text\" onChange={(e) => {\n        setName(e.target.value)\n      }}/>\n      <button \n        title = \"Edit\"\n        onClick={async (e) => {\n            e.preventDefault()\n            submitPetName(petUrl, name, setChange)\n        }}\n        > \n          Change name \n        </button>\n      </div>\n    )\n}\n\nconst ViewPet = ({petUrl, setUserChange}) => {\n    const [status, setStatus] = useState(0)\n    const [name, setName] = useState(\"Rocky\")\n    const [level, setLevel] = useState(0)\n    const [health, setHealth] = useState(100)\n    const [days, setDays] = useState(0)\n    const [foodToLevelUp, setFoodToLevelUp] = useState(0)\n    const [overallFoodIntake, setOverallFoodIntake] = useState(0)\n    const [foodNextLevel, setFoodNextLevel] = useState(1)\n    const [newName, setNewName] = useState(name)\n    const [pet, setPet] = useState({})\n    const [reqData, setReqData] = useState(\"\")\n    const [feed, setFeed] = useState(0)\n    try {\n        //  get pet info from backend API\n        async function getPet(url) {\n            const pet = await getObject(url)\n            // update pet object\n            if (!pet) {\n                return\n            }\n            setPet(pet)\n            const date = pet.born\n            setName(pet.name)\n            setNewName(pet.name)\n            setLevel(pet.level)\n            setHealth(pet.health)\n            setStatus(Math.round(pet.level/5))\n            setFoodToLevelUp(pet.foodRequiredToLevelUp)\n            setDays(differenceInDays(date, Date.now()))\n            setOverallFoodIntake(pet.overallFoodIntake)\n            setFoodNextLevel(pet.overallFoodIntake + pet.foodRequiredToLevelUp)\n        }\n        useEffect(() => {\n            setPet({})\n            getPet(petUrl);\n        }, [reqData])\n    } catch (error) {\n        console.log(error)\n    }\n    return (\n      <div style={petStyle}>\n          <Image \n            src={petStates[status]} \n            alt={name}\n            width={imageWidth}\n            height={imageHeight}\n            style={imageStyle}\n          />\n          <div style={infoStyle}>\n          <p>{name}</p>\n          <input \n            type=\"text\" \n            value={newName}\n            onChange={(e) => {\n              setNewName(e.target.value)\n          }}/>\n          <button \n            title = \"Edit\"\n            onClick={async (e) => {\n                e.preventDefault()\n                submitPetName(petUrl, newName, setReqData)\n                const random = Math.random().toString(36).substring(2, 15)\n                setUserChange(random)\n            }}\n          > \n            Change name \n          </button>\n          <p>Level: {level}  {overallFoodIntake}/{foodNextLevel} </p>\n          <p>Health: {health} </p>\n          <p>Food To Level Up: {foodToLevelUp} </p>\n          <p>Age: {days} days</p>\n          <p> Feed {name}: \n            <input \n              type=\"text\" \n              pattern=\"[0-9]*\" \n              onChange={(e) => {\n                setFeed(Number(e.target.value))\n              }}/>\n            <button \n              title = \"Feed\"\n              onClick={async (e) => {\n                e.preventDefault()\n                submitPetFood(petUrl, feed, setReqData)\n                const random = Math.random().toString(36).substring(2, 15)\n                setUserChange(random)\n              }}\n            > \n              Feed\n            </button>\n          </p>\n          </div>\n      </div>)\n}\n\nconst ViewPetSimple = ({petUrl}) => {\n    const [status, setStatus] = useState(0)\n    const [name, setName] = useState(\"\")\n    const [level, setLevel] = useState(0)\n    const [health, setHealth] = useState(100)\n    const [overallFoodIntake, setOverallFoodIntake] = useState(0)\n    const [foodNextLevel, setFoodNextLevel] = useState(1)\n    const [pet, setPet] = useState({})\n    try {\n        useEffect(() => {\n           //  get pet info from backend API\n          async function getPet(url) {\n            const pet = await getObject(url)\n            if (!pet) {\n                return\n            }\n            // update pet object\n            setPet(pet)\n            setName(pet.name)\n            setLevel(pet.level)\n            setStatus(Math.round(pet.level/5))\n            setHealth(pet.health)\n            setOverallFoodIntake(pet.overallFoodIntake)\n            setFoodNextLevel(pet.overallFoodIntake + pet.foodRequiredToLevelUp)\n          }  \n          setPet({})\n          getPet(petUrl);\n        }, [])\n    } catch (error) {\n        console.log(error)\n    }\n    return (\n      <div style={petStyle}>\n          <Image \n            src={petStates[status]} \n            alt={name}\n            width={imageWidth}\n            height={imageHeight}\n            style={imageStyle}\n          />\n          <div style={infoStyle}>\n            <p>{name}</p>\n            <p>Level: {level}  {overallFoodIntake}/{foodNextLevel} </p>\n            <p>Health: {health} </p>\n          </div>\n      </div>)\n}\n\nexport {ViewPetSimple, ViewPet, PetNameInput};","import React, {useState, useEffect} from 'react';\nimport { \n    makeNewPost, \n    patch, \n    getObject,\n    deleteObject\n} from '../fetch/generalFetch';\nimport { MoodInput } from './Mood';\nimport ErrorMessage from './Error'\nimport history from './history'\nimport {Link, Route, useLocation, useParams} from 'react-router-dom'\n\nconst reflectionStyle = {\n    alignContent: 'center',\n    margin: 5,\n    padding: 5,\n    outline: \"thick solid white\",\n    overflow: 'scroll',\n    backgroundColor: \"lavender\"\n}\n\nconst textBoxStyle = {\n    width: '95%',\n    height: '40',\n}\n\nasync function submitReflection(postUrl, id, \n    event, des, learnt, \n    scaleB, scaleD, scaleA, \n    comB, comD, comA, \n    eva, ana, act, con) {\n    \n    var extended = false;\n    if (eva !== \"\" || ana !== \"\" || act !== \"\" || con !== \"\") {\n        extended = true\n    }\n\n    const newEntryDetails = {\n        event: event,\n        description: des,\n        learnt: learnt,\n        moodBefore: scaleB,\n        moodDuring: scaleD,\n        moodAfter: scaleA,\n        commentsBefore: comB,\n        commentsDuring: comD,\n        commentsAfter: comA,\n        evaluation: eva,\n        actions: ana,\n        actionPlan: act,\n        conclusion: con,\n        extended: extended\n    }\n    var newPost = null\n    if (id != null) {\n        postUrl+= \"/\" + id\n        newPost = await patch(postUrl, newEntryDetails)\n    } else {\n        newPost = await makeNewPost(postUrl, newEntryDetails)\n    }\n    // error\n    if (newPost && newPost.msg) {\n        return newPost\n    }\n    id = newPost._id\n    return id\n}\nasync function deleteReflection(url, id, setChange) {\n    if (id != null) {\n        url+= \"/\" + id\n        const result = await deleteObject(url)\n        if (Array.isArray(result)) {\n            if (setChange) {  \n                setChange(id)\n            }\n            return result\n        }\n    } \n    return []\n}\n\nconst ReflectionInput = React.memo(({reflectionUrl, reflection, setUserChange}) => {\n    // set variables (reflection input)\n    const [event, setEvent] = useState(\"\")\n    const [des, setDes] = useState(\"\")\n    const [learnt, setLearnt] = useState(\"\")\n    const [moodB, setMoodB] = useState(0)\n    const [moodD, setMoodD] = useState(0)\n    const [moodA, setMoodA] = useState(0)\n    const [comB, setComB] = useState(\"\")\n    const [comD, setComD] = useState(\"\")\n    const [comA, setComA] = useState(\"\")\n    const [ana, setAna] = useState(\"\")\n    const [con, setCon] = useState(\"\")\n    const [eva, setEva] = useState(\"\")\n    const [act, setAct] = useState(\"\")\n    const [id, setID] = useState(null)\n    // set variables for error msgs\n    const [displayError, setDisplayError] = useState(\"none\")\n    const [error, setError] = useState(\"\")\n\n    const params = useParams()\n    const reflectionId = params.reflectionId\n    if (reflection) {\n        setEvent(reflection.event)\n        setDes(reflection.description)\n        setLearnt(reflection.learnt)\n        setMoodB(reflection.feelings.moodBefore.scale)\n        setMoodD(reflection.feelings.moodDuring.scale)\n        setMoodA(reflection.feelings.moodAfter.scale)\n        setComB(reflection.feelings.moodBefore.comments)\n        setComD(reflection.feelings.moodDuring.comments)\n        setComA(reflection.feelings.moodAfter.comments)\n        setEva(reflection.evaluation)\n        setCon(reflection.conclusion)\n        setAna(reflection.analysis)\n        setAct(reflection.actionPlan)\n        setID(reflectionId)\n    }\n    try {\n      async function getReflection() {\n          if (!reflectionId) {\n              return\n          }\n          const reflection = await getObject(reflectionUrl+\"/\"+reflectionId)\n          if (reflection && reflection.msg) {\n              return\n          }\n          setEvent(reflection.event)\n          setDes(reflection.description)\n          setLearnt(reflection.learnt)\n          setMoodB(reflection.feelings.moodBefore.scale)\n          setMoodD(reflection.feelings.moodDuring.scale)\n          setMoodA(reflection.feelings.moodAfter.scale)\n          setComB(reflection.feelings.moodBefore.comments)\n          setComD(reflection.feelings.moodDuring.comments)\n          setComA(reflection.feelings.moodAfter.comments)\n          setEva(reflection.evaluation)\n          setCon(reflection.conclusion)\n          setAna(reflection.analysis)\n          setAct(reflection.actionPlan)\n          setID(reflectionId)\n      }\n        useEffect(()=> {\n          getReflection()\n      }, [])\n    } catch (err) {\n        console.log(err)\n        return null\n    }\n    return (\n      <div style={reflectionStyle}>\n        <p>Write a reflection!!!</p>\n        <form>\n          <p>Event title: \n          <input \n            style={textBoxStyle}\n            placeholder=\"event\"\n            type=\"text\"\n            value={event}\n            onChange={(e) => {\n                setEvent(e.target.value)\n            }}\n          />\n          </p>\n          <p>What happened? </p>\n          <textarea \n            style={textBoxStyle}\n            value={des}\n            placeholder=\"description\"\n            onChange={(e) => {\n                setDes(e.target.value)\n            }}\n          />\n          <p>Action - What did you do in response: </p>\n          <textarea \n            style={textBoxStyle}\n            placeholder=\"actions\"\n            value={ana}\n            onChange={(e) => {\n                setAna(e.target.value)\n            }}\n          />\n          <p>Lessons Learnt: </p>\n          <textarea \n            style={textBoxStyle}\n            placeholder=\"what you learnt from this\"\n            value={learnt}\n            onChange={(e) => {\n                setLearnt(e.target.value)\n            }}\n          />\n          <MoodInput \n          text1=\"How did you feel before the event?\" \n          scale={moodB}\n          setScale={setMoodB}\n          setCom={setComB}\n          com={comB}\n          />\n          <MoodInput \n          text1=\"How did you feel during the event?\" \n          scale={moodD}\n          setScale={setMoodD}\n          setCom={setComD}\n          com={comD}\n          />\n          <MoodInput \n          text1=\"How did you feel after the event?\" \n          scale={moodA}\n          setScale={setMoodA}\n          setCom={setComA}\n          com={comA}\n          />\n          <p>Did you think you did a good job? </p>\n          <textarea \n            style={textBoxStyle}\n            placeholder=\"evaluation\"\n            value={eva}\n            onChange={(e) => {\n                setEva(e.target.value)\n            }}\n          />\n          <p>What would you do if it happened again? </p>\n          <textarea \n            style={textBoxStyle}\n            placeholder=\"action plan\"\n            value={act}\n            onChange={(e) => {\n                setAct(e.target.value)\n            }}\n          />\n          <p>Overall how did you think you went: </p>\n          <textarea\n            style={textBoxStyle} \n            placeholder=\"conclusion\"\n            type=\"text\"\n            value={con}\n            onChange={(e) => {\n                setCon(e.target.value)\n            }}\n          />\n          <ErrorMessage \n            display={displayError} \n            msg={error}\n          />\n          <button \n            title = \"Save\"\n            onClick={async (e) => {\n                e.preventDefault()\n                const newID = await submitReflection(reflectionUrl, id, \n                    event, des, learnt, \n                    moodB, moodD, moodA, \n                    comB, comD, comA,\n                    eva, ana, act, con\n                    )\n                if (newID && newID.msg) {\n                    // show error message\n                    setDisplayError(\"block\")\n                    setError(newID.msg)\n                    return\n                }\n                // ensure no error msg\n                setDisplayError(\"none\")\n                setError(\"\")\n                setID(newID)\n                const random = Math.random().toString(36).substring(2, 15)\n                setUserChange(random)\n                history.push('/home/reflections')\n            }}\n          > \n            Save \n          </button>\n          <button \n            title = \"Back\"\n            onClick={async (e) => {\n                e.preventDefault()\n                history.goBack()\n            }}\n          > \n            Back \n          </button>\n        </form>\n      </div>\n    );\n})\n\nconst ViewReflection = ({reflectionUrl, reflection, setChange, setUserChange}) => {\n    const path = useLocation().pathname\n    const pathname = path.replace(/\\/$/, '')\n    const [event, setEvent] = useState(\"\")\n    const [des, setDes] = useState(\"\")\n    const [learnt, setLearnt] = useState(\"\")\n    const [moodB, setMoodB] = useState(0)\n    const [moodD, setMoodD] = useState(0)\n    const [moodA, setMoodA] = useState(0)\n    const [comB, setComB] = useState(\"\")\n    const [comD, setComD] = useState(\"\")\n    const [comA, setComA] = useState(\"\")\n    const [ana, setAna] = useState(\"\")\n    const [con, setCon] = useState(\"\")\n    const [eva, setEva] = useState(\"\")\n    const [act, setAct] = useState(\"\")\n    const [id, setID] = useState(null)\n    const [date, setDate] = useState(Date.now())\n    const params = useParams()\n    const reflectionId = params.reflectionId\n    if (reflection) {\n        setEvent(reflection.event)\n        setDes(reflection.description)\n        setLearnt(reflection.learnt)\n        setMoodB(reflection.feelings.moodBefore.scale)\n        setMoodD(reflection.feelings.moodDuring.scale)\n        setMoodA(reflection.feelings.moodAfter.scale)\n        setComB(reflection.feelings.moodBefore.comments)\n        setComD(reflection.feelings.moodDuring.comments)\n        setComA(reflection.feelings.moodAfter.comments)\n        setEva(reflection.evaluation)\n        setCon(reflection.conclusion)\n        setAna(reflection.analysis)\n        setAct(reflection.actionPlan)\n        setID(reflectionId)\n        setDate(reflection.dateCreated)\n    }\n    try {\n        async function getReflection() {\n          if (!reflectionId) {\n              return\n          }\n          const reflection = await getObject(reflectionUrl+\"/\"+reflectionId)\n          if (reflection && reflection.msg) {\n              return\n          }\n          setEvent(reflection.event)\n          setDes(reflection.description)\n          setLearnt(reflection.learnt)\n          setMoodB(reflection.feelings.moodBefore.scale)\n          setMoodD(reflection.feelings.moodDuring.scale)\n          setMoodA(reflection.feelings.moodAfter.scale)\n          setComB(reflection.feelings.moodBefore.comments)\n          setComD(reflection.feelings.moodDuring.comments)\n          setComA(reflection.feelings.moodAfter.comments)\n          setEva(reflection.evaluation)\n          setCon(reflection.conclusion)\n          setAna(reflection.analysis)\n          setAct(reflection.actionPlan)\n          setDate(reflection.dateCreated)\n          setID(reflectionId)\n        }\n        useEffect(()=> {\n            getReflection()\n        }, [])\n    } catch (err) {\n        console.log(err)\n        return null\n    }\n    return (\n      <div style={reflectionStyle}>\n          <p>{date.toString()}</p>\n          <p>{event}</p>\n          <p>{des}</p>\n          <p>Actions taken: {ana}</p>\n          <p>Lessons Learnt: {learnt}</p>\n          <p>Mood Before: {moodB}/10</p>\n          <p>{comB}</p>\n          <p>Mood During: {moodD}/10</p>\n          <p>{comD}</p>\n          <p>Mood After: {moodA}/10</p>\n          <p>{comA}</p>\n          <p>Evaluation: {eva}</p>\n          <p>Action Plan for next time: {act}</p>\n          <p>Conclusion: {con}</p>\n          <Link to={{pathname: pathname+'/edit'}}>\n            <button \n              title = \"Edit\"\n            > \n              Edit \n            </button>\n          </Link>{' '}\n          <button \n            title = \"Delete\"\n            onClick={async (e) => {\n                e.preventDefault()\n                deleteReflection(reflectionUrl, id, setUserChange)\n                history.push('/home/reflections')\n            }}\n          > \n            Delete \n          </button>\n          <Route path={pathname+\"/edit\"} component={() => <ReflectionInput reflectionUrl={reflectionUrl} reflection={reflection} setChange={setChange} setUserChange={setUserChange}/>}/>\n      </div>)\n}\n\nconst ViewReflectionSimple = ({reflectionUrl, reflection, setChange, setUserChange}) => {\n    const path = useLocation().pathname\n    const pathname = path.replace(/\\/$/, '')\n    const date = reflection.dateCreated\n    const event = reflection.event\n    const id = reflection._id\n    if (!reflection) {\n      history.push('/home')\n      return null\n    }\n    return (\n      <div \n        style={reflectionStyle}\n      >\n          <p>{date.toString()}</p>\n          <p>{event}</p>\n          <Link to={{pathname: pathname+'/'+id}}>\n            <button \n              title = \"View\"\n            > \n              View\n            </button>\n          </Link>{' '}\n          <Link to={{pathname: pathname+'/'+id+'/edit'}}>\n            <button \n              title = \"Edit\"\n            > \n              Edit \n            </button>\n          </Link>{' '}\n          <button \n            title = \"Delete\"\n            onClick={async (e) => {\n                e.preventDefault()\n                deleteReflection(reflectionUrl, id, setChange)\n            }}\n          > \n            Delete \n          </button>\n          <Route exact path={pathname+\"/:reflectionId\"} component={() => <ViewReflection reflectionUrl={reflectionUrl} reflection={reflection} setChange={setChange} setUserChange={setUserChange}/>}/>\n          <Route path={pathname+\"/:reflectionId/edit\"} component={() => <ReflectionInput reflectionUrl={reflectionUrl} reflection={reflection} setChange={setChange} setUserChange={setUserChange}/>}/>\n      </div>)\n}\n\nconst ViewReflections = ({reflectionUrl, setUserChange}) => {\n    const [reflections, setReflections] = useState([])\n    const [reqData, setReqData] = useState(\"\")\n    try {\n        //  get Reflections from backend API\n        async function getReflections(url) {\n            const reflections = await getObject(url)\n            // update reflection array\n            setReflections(reflections)\n        }\n        useEffect(() => {\n            setReflections([])\n            getReflections(reflectionUrl);\n        }, [reqData])\n    } catch (error) {\n        console.log(error)\n    }\n    return (<div style={reflectionStyle}>\n        Your Reflections:\n        {reflections.map((reflection) => \n          (<ViewReflectionSimple\n            reflection={reflection} \n            reflectionUrl={reflectionUrl} \n            setReflections={setReflections}\n            setChange={setReqData}\n            key={reflection._id}\n            setUserChange={setUserChange}\n          />))}\n    </div>)\n}\n\nexport {ReflectionInput, ViewReflections, ViewReflection};","import React, {useState, useEffect} from 'react';\nimport { \n    makeNewPost, \n    patch, \n    getObject,\n    deleteObject\n} from '../fetch/generalFetch';\nimport { MoodInput } from './Mood';\nimport ErrorMessage from './Error'\nimport history from './history'\n\nimport {Link, Route, useLocation, useParams} from 'react-router-dom'\n\nconst journalStyle = {\n    alignContent: 'center',\n    margin: 5,\n    padding: 5,\n    outline: \"thick solid white\",\n    backgroundColor: \"palegreen\",\n    overflow: 'scroll',\n}\n\nconst textBoxStyle = {\n    width: '95%',\n    height: '40',\n}\n\nasync function submitJournal(postUrl, id, title, entry, positives, scale, comments) {\n    const newEntryDetails = {\n        title: title,\n        entry: entry,\n        positives: positives,\n        mood: scale,\n        comments: comments\n    }\n    var newPost = null\n    if (id != null) {\n      postUrl+= \"/\" + id\n        newPost = await patch(postUrl, newEntryDetails)\n    } else {\n        newPost = await makeNewPost(postUrl, newEntryDetails)\n    }\n    if (newPost.msg) {\n        return newPost\n    }\n    id = newPost._id\n    return id\n}\nasync function deleteJournal(url, id, setChange) {\n    if (id != null) {\n        url+= \"/\" + id\n        const result = await deleteObject(url)\n        if (Array.isArray(result)) {\n            if (setChange) {\n                setChange(id)\n            }\n            return result\n        }\n    } \n    return []\n}\nconst JournalInput = React.memo(({journalUrl, journal, setUserChange}) => {\n    const [title, setTitle] = useState(\"\")\n    const [entry, setEntry] = useState(\"\")\n    const [positives, setPositives] = useState(\"\")\n    const [mood, setMood] = useState(0)\n    const [com, setCom] = useState(\"\")\n    const [id, setID] = useState(null)\n    const [displayError, setDisplayError] = useState(\"none\")\n    const [error, setError] = useState(\"\")\n    const params = useParams()\n    const journalId = params.journalId\n    if (journal) {\n        setTitle(journal.title)\n        setEntry(journal.entry)\n        setMood(journal.mood.scale)\n        setCom(journal.mood.comments)\n        setPositives(journal.positives)\n        setID(journalId)\n    }\n    try {\n        async function getJournal() {\n            if (!journalId) {\n                return\n            }\n            const journal = await getObject(journalUrl+\"/\"+journalId)\n            if (journal && journal.msg) {\n                return\n            }\n            setTitle(journal.title)\n            setMood(journal.mood.scale)\n            setCom(journal.mood.comments)\n            setEntry(journal.entry)\n            setPositives(journal.positives)\n            setID(journalId)\n        }\n        useEffect(()=> {\n            getJournal()\n        }, [])\n    } catch (err) {\n        console.log(err)\n        return null\n    }\n    return (\n      <div style={journalStyle}>\n        <form>\n          <p>Entry Title: \n          <input \n            type=\"text\"\n            style={textBoxStyle}\n            value={title}\n            onChange={(e) => {\n                setTitle(e.target.value)\n            }}\n          />\n          </p>\n          <p>Your Entry: </p>\n          <textarea \n            style={textBoxStyle}\n            value={entry}\n            onChange={(e) => {\n                setEntry(e.target.value)\n            }}\n          />\n          <p>What were the positives? </p>\n          <textarea \n            style={textBoxStyle}\n            value={positives}\n            onChange={(e) => {\n                setPositives(e.target.value)\n            }}\n          />\n          <MoodInput \n          text1=\"How did you feel\" \n          scale={mood}\n          setScale={setMood}\n          setCom={setCom}\n          com={com}\n          />\n          <p/>\n          <ErrorMessage \n            display={displayError} \n            msg={error}\n          />\n          <button \n            title = \"Save\"\n            onClick={async (e) => {\n                e.preventDefault()\n                const newID = await submitJournal(journalUrl, id, title, entry, positives, mood, com)\n                if (newID && newID.msg) {\n                    // show error message\n                    setDisplayError(\"block\")\n                    setError(newID.msg)\n                    return\n                }\n                // ensure no error msg\n                setDisplayError(\"none\")\n                setError(\"\")\n                setID(newID)\n                const random = Math.random().toString(36).substring(2, 15)\n                setUserChange(random)\n                history.push('/home/journals/')\n            }}\n          > \n            Save \n          </button>\n          <button \n            title = \"Back\"\n            onClick={async (e) => {\n                e.preventDefault()\n                history.goBack()\n            }}\n          > \n            Back \n          </button>\n          <Route exact path={\"/home/journals\"} component={() => <ViewJournals journalUrl={journalUrl} setUserChange={setUserChange}/>}/>\n        </form>\n      </div>\n    );\n})\n\nconst ViewJournal = ({journalUrl, journal, setChange, setUserChange}) => {\n    const params = useParams()\n    const path = useLocation().pathname\n    const pathname = path.replace(/\\/$/, '')\n    const journalId = params.journalId\n    const [date, setDate] = useState(Date.now())\n    const [title, setTitle] = useState(\"\")\n    const [entry, setEntry] = useState(\"\")\n    const [mood, setMood] = useState(0)\n    const [comm, setComm] = useState(\"\")\n    const [positives, setPositives] = useState(\"\")\n    if (journal) {\n      setDate(journal.dateCreated)\n      setTitle(journal.title)\n      setMood(journal.mood.scale)\n      setComm(journal.mood.comments)\n      setEntry(journal.entry)\n      setPositives(journal.positives)\n    }\n    try {\n        async function getJournal() {\n            const journalObject = await getObject(journalUrl+\"/\"+journalId)\n            if (journalObject && journalObject.msg) {\n                return null\n            }\n            setDate(journalObject.dateCreated)\n            setTitle(journalObject.title)\n            setMood(journalObject.mood.scale)\n            setComm(journalObject.mood.comments)\n            setEntry(journalObject.entry)\n            setPositives(journalObject.positives)\n        }\n        useEffect(()=> {\n            getJournal()\n        })\n        if (!journalId) {\n            return false\n        }\n    } catch (err) {\n        console.log(err)\n        return null\n    }\n    return (\n      <div style={journalStyle}>\n          <p>{date.toString()}</p>\n          <p>{title}</p>\n          <p>Mood: {mood}/10 </p>\n          <p>Comments: {comm}</p>\n          <p>Entry: {entry}</p>\n          <p>Positives: {positives}</p>\n          <Link to={{pathname: pathname+'/edit'}}>\n            <button \n              title = \"Edit\"\n            > \n              Edit \n            </button>\n          </Link>{' '}\n          <button \n            title = \"Delete\"\n            onClick={async (e) => {\n                e.preventDefault()\n                deleteJournal(journalUrl, journalId, setChange)\n                history.push('/home/journals')\n            }}\n          > \n            Delete \n          </button>\n          <Route path={pathname+\"/edit\"} component={() => <JournalInput journalUrl={journalUrl} journal={journal} setChange={setChange} setUserChange={setUserChange}/>}/>\n      </div>)\n}\n\nconst ViewJournalSimple = ({journalUrl, journal, setChange, setUserChange}) => {\n    const path = useLocation().pathname\n    const pathname = path.replace(/\\/$/, '')\n    const date = journal.dateCreated\n    const title = journal.title\n    const mood = journal.mood.scale\n    const id = journal._id\n    if (!journal) {\n        history.push('/home')\n        return null\n    }\n    return (\n      <div \n        style={journalStyle}\n      >\n          <p>{date.toString()}</p>\n          <p>{title}</p>\n          <p>Mood: {mood}/10 </p>\n          <Link to={{pathname: pathname+'/'+id}}>\n            <button \n              title = \"View\"\n            > \n              View\n            </button>\n          </Link>{' '}\n          <Link to={{pathname: pathname+'/'+id+'/edit'}}>\n            <button \n              title = \"Edit\"\n            > \n              Edit \n            </button>\n          </Link>{' '}\n          <button \n            title = \"Delete\"\n            onClick={async (e) => {\n                e.preventDefault()\n                deleteJournal(journalUrl, id, setChange)\n            }}\n          > \n            Delete \n          </button>\n            <Route exact path={pathname+\"/:journalId\"} component={() => <ViewJournal journalUrl={journalUrl} journal={journal} setChange={setChange} setUserChange={setUserChange}/>}/>\n            <Route path={pathname+\"/:journalId/edit\"} component={() => <JournalInput journalUrl={journalUrl} journal={journal} setChange={setChange} setUserChange={setUserChange}/>}/>\n      </div>)\n}\n\nconst ViewJournals = ({journalUrl, setUserChange}) => {\n    const [journals, setJournals] = useState([])\n    const [reqData, setReqData] = useState(\"\")\n    try {\n        //  get Journals from backend API\n        async function getJournals(url) {\n            const journals = await getObject(url)\n            // update journals array\n            setJournals(journals)\n        }\n        useEffect(() => {\n            setJournals([])\n            getJournals(journalUrl);\n        }, [reqData])\n    } catch (error) {\n        console.log(error)\n    }\n    return (<div style={journalStyle}>\n        Your Journals:\n        {journals.map((journal) => \n          (<ViewJournalSimple\n            journal={journal} \n            journalUrl={journalUrl} \n            setJournals={setJournals}\n            setChange={setReqData}\n            key={journal._id}\n            setUserChange={setUserChange}\n          />))}\n    </div>)\n}\n\nexport {JournalInput, ViewJournals, ViewJournal};","import React from 'react'\nimport {makeNewPost} from '../fetch/generalFetch'\nimport url from './url'\nimport {\n  Link,\n  Route,\n  Switch,\n} from 'react-router-dom';\nimport LoginHome from './LoginHome'\nimport history from './history'\n\nasync function logout() {\n    const loggedout = await makeNewPost(url+\"user/logout\", {})\n    return loggedout\n}\n\nconst Logout = ({url, setLoggedIn}) => {\n    return (\n      <div>\n        <Link to={{pathname: '/login'}}>\n          <button \n            title = \"Logout\"\n            onClick={async (e) => {\n                e.preventDefault()\n                const loggedout = await logout(url)\n                // clear tokens\n                sessionStorage.removeItem('authToken')\n                sessionStorage.removeItem('refreshToken')\n                // return to login/signup page\n                history.push('/login')\n                setLoggedIn(false)\n            }}\n          > \n            Log out\n          </button>\n        </Link>{' '}\n        <Switch>\n          <Route path=\"/login\"component={() => <LoginHome url={url}/>}/>\n        </Switch>\n      </div>\n    )\n}\n\nexport default Logout\n\n","import {\n    Link,\n    Route,\n  } from 'react-router-dom';\nimport React, {useState, useEffect} from 'react';\nimport { ViewMoods, MoodForm } from './Mood';\nimport { ViewPet, ViewPetSimple } from './Pet';\nimport {ViewReflections, ViewReflection, ReflectionInput } from './Reflection';\nimport {ViewJournals, ViewJournal, JournalInput} from './Journal'\nimport LoginHome from './LoginHome';\nimport Logout from './Logout';\nimport { getObject } from '../fetch/generalFetch';\n \nconst PetStyle = {\n  margin: 20,\n  padding: 5,\n  color: 'black',\n  textDecoration: 'none',\n  backgroundColor: 'lightcoral',\n  outline: 'thin solid black'\n}\n\nconst JournalStyle = {\n  margin: 20,\n  padding: 5,\n  color: 'black',\n  textDecoration: 'none',\n  backgroundColor: 'palegreen',\n  outline: 'thin solid black'\n}\n\nconst ReflectionStyle = {\n  margin: 20,\n  padding: 5,\n  color: 'black',\n  textDecoration: 'none',\n  backgroundColor:\"lavender\",\n  outline: 'thin solid black'\n}\n\nconst MoodStyle = {\n  margin: 20,\n  padding: 5,\n  color: 'black',\n  textDecoration: 'none',\n  backgroundColor:'paleturquoise',\n  outline: 'thin solid black'\n}\n\nconst NavStyle = {\n  margin: 20,\n  padding: 5,\n  display: 'flex',\n  flexDirection: 'column',\n  overflow: 'scroll',\n}\nconst DisplayStyle = {\n  margin: 20,\n  padding: 5,\n  display: 'flex',\n  flexDirection: 'row',\n  overflow: 'scroll'\n}\nconst ComponentStyle = {\n\n}\n\nconst BoxStyle = {\n  display: 'flex',\n  flexDirection: 'column',\n  alignContent: 'center'\n}\n\nconst TitleStyle = {\n    textAlign: 'center'\n}\n\nconst QuoteStyle = (quote) => {\n  var display = 'none'\n  if (quote === true) {\n      display = 'block'\n  } \n  return ({\n      display: display\n  })\n}\n\nconst NavBar = ({url, setLoggedIn, pathname, loggedIn}) => {\n    const [name, setName] = useState(\"\")\n    const [points, setPoints] = useState(0)\n    const [change, setUserChange] = useState(\"\")\n    const [quote, setQuote] = useState(\"\")\n    const [author, setAuthor] = useState(\"\")\n    const [quoteAvailable, setQuoteAvailable] = useState(false)\n    useEffect(() => {\n        try {\n            async function getUserDetails() {\n                const user = await getObject(url+\"user\") \n                console.log(user) \n                if (user && user.name != null && user.remainingPoints != null) {\n                    setName(user.name)\n                    setPoints(user.remainingPoints)\n                }\n            }\n            /*async function getQuote() {\n                const res = await getObject(\"https://quotes.rest/qod?category=inspire&language=en\")\n                if (res && res.contents && res.contents.quotes && res.contents.quotes.length() > 0) {\n                    setQuoteAvailable(true)\n                    setQuote(res.contents.quotes[0].quote)\n                    setAuthor(res.contents.quotes[0].author)\n                }\n            }\n            setQuote(\"\")\n            setAuthor(\"\")\n            setQuoteAvailable(false)*/\n            setName(\"\")\n            setPoints(0)\n            getUserDetails()\n            //getQuote()\n        } catch (err) {\n            console.log(\"error:\", err)\n        }    \n    }, [loggedIn, change])\n  return (\n    <div style={BoxStyle}>\n      <div style={BoxStyle, TitleStyle}>\n        <p>Welcome back {name}!</p>\n        <p>Remaining points: {points}</p>\n        <div style={QuoteStyle(quoteAvailable)}>\n          <p>Your quote of the day: {quote}</p>\n          <p>By {author}</p>\n          </div>\n      </div>\n      <div style={DisplayStyle}>\n        <div style={NavStyle}>\n          <Link to={{pathname: pathname+'/pet'}} style={PetStyle}>View Pet</Link>{' '}\n          <Link to={{pathname: pathname+'/feedpet'}} style={PetStyle}>Feed Pet</Link>{' '}\n          <Link to={{pathname: pathname+'/journals'}} style={JournalStyle}>Journals</Link>{' '}\n          <Link to={{pathname: pathname+'/newjournal'}} style={JournalStyle}>Write a new Journal Entry</Link>{' '}\n          <Link to={{pathname: pathname+'/reflections'}} style={ReflectionStyle}>Reflections</Link>{' '}\n          <Link to={{pathname: pathname+'/newreflection'}} style={ReflectionStyle}>Write a new Reflection</Link>{' '}        \n          <Link to={{pathname: pathname+'/moods'}} style={MoodStyle}>Mood</Link>{' '}\n          <Link to={{pathname: pathname+'/newmood'}} style={MoodStyle}>New Mood</Link>{' '}\n          <Logout url={url} setLoggedIn={setLoggedIn}/>\n        </div> \n        <div style={ComponentStyle}>\n          <Route path={pathname+\"/pet\"} component={() => <ViewPetSimple petUrl={url+\"pet\"}/>}/>\n          <Route path={pathname+\"/feedpet\"} component={() => <ViewPet petUrl={url+\"pet\"} setUserChange={setUserChange}/>}/>\n          <Route exact path={pathname+\"/journals\"} component={() => <ViewJournals journalUrl={url+\"journal\"} setUserChange={setUserChange}/>}/>\n          <Route exact path={pathname+\"/journals/:journalId\"} component={() => <ViewJournal journalUrl={url+\"journal\"} setUserChange={setUserChange}/>}/>\n          <Route path={pathname+\"/journals/:journalId/edit\"} component={() => <JournalInput journalUrl={url+\"journal\"} setUserChange={setUserChange}/>}/>\n          <Route path={pathname+\"/newjournal\"} component={() => <JournalInput journalUrl={url+\"journal\"} setUserChange={setUserChange}/>}/>\n          <Route exact path={pathname+\"/reflections\"} component={() => <ViewReflections reflectionUrl={url+\"reflection\"} setUserChange={setUserChange}/>}/>\n          <Route path={pathname+\"/newreflection\"} component={() => <ReflectionInput reflectionUrl={url+\"reflection\"} setUserChange={setUserChange}/>}/>\n          <Route exact path={pathname+\"/reflections/:reflectionId\"} component={() => <ViewReflection reflectionUrl={url+\"reflection\"} setUserChange={setUserChange}/>}/>\n          <Route exact path={pathname+\"/reflections/:reflectionId/edit\"} component={() => <ReflectionInput reflectionUrl={url+\"reflection\"} setUserChange={setUserChange}/>}/>\n          <Route path={pathname+\"/moods\"} component={() => <ViewMoods moodUrl={url+\"moods\"}/>}/>\n          <Route path={pathname+\"/newmood\"} component={() => <MoodForm moodUrl={url+\"moods\"} setUserChange={setUserChange}/>}/>\n          <Route path={pathname+\"/login\"} component={() => <LoginHome url={url}/>}/>\n        </div>\n      </div>  \n      </div> \n  )};\nexport default NavBar;","import React, {useState} from 'react';\nimport 'rc-slider/assets/index.css';\nimport { \n    makeNewPost\n} from '../fetch/generalFetch';\nimport ErrorMessage from './Error'\nimport {\n  Link,\n  Route,\n  Switch,\n} from 'react-router-dom';\nimport NavBar from './NavBar'\nimport history from './history'\n\nconst signUpStyle = {\n    alignContent: 'center',\n    margin: 5,\n    padding: 5,\n    backgroundColor: \"orange\",\n    alignSelf: 'center'\n}\n\nconst reqStyle = {\n    fontSize: \"smaller\",\n    fontWeight: \"lighter\",\n}\n\nasync function submitSignUp(postUrl, name, email, password) {\n    console.log(\"patchjournal...\", name, email,password)\n    const signUpDetails = {\n        name: name,\n        email: email,\n        password: password\n    }\n    const signUp = await makeNewPost(postUrl, signUpDetails)\n    return (signUp)\n}\n\nconst SignUpForm= React.memo(({url, setLoggedIn}) => {\n    const [name, setName] = useState(\"\")\n    const [email, setEmail] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [displayError, setDisplayError] = useState(\"none\")\n    const [error, setError] = useState(\"\")\n    return (\n      <div style={signUpStyle}>\n        <form>\n          <p>Name:\n          <input \n            type=\"text\"\n            onChange={(e) => {\n                setName(e.target.value)\n            }}\n          />\n          </p>\n          <p>Email: \n          <input \n            type=\"text\"\n            onChange={(e) => {\n                setEmail(e.target.value)\n            }}\n          />\n          </p>\n          <p>Password: \n          <input \n            type=\"password\"\n            onChange={(e) => {\n                setPassword(e.target.value)\n            }}\n          />\n          </p>\n          <p style={reqStyle}>Must be at least 6 characters long</p>\n          <ErrorMessage \n            display={displayError} \n            msg={error}\n          />\n          <div>\n            <Switch>\n              <Link to={{pathname: '/home'}}>\n                <button \n                  onClick={async (e) => {\n                    e.preventDefault()\n                    const user = await submitSignUp(url,name,email,password)\n                    console.log(\"user\", user)\n                    // invalid login details\n                    if (user.msg) {\n                      setDisplayError(\"block\")\n                      setError(user.msg)\n                      return\n                    }\n                    setDisplayError(\"none\")\n                    sessionStorage.setItem('authToken', user[\"authToken\"])\n                    sessionStorage.setItem('refreshToken', user[\"refreshToken\"])\n                    setLoggedIn(true)\n                    history.push('/home')\n                  }}\n                > \n                  Sign Up\n                </button>\n                </Link>\n                <Route path=\"/home\" component={() => <NavBar baseUrl={url}/>}/>\n              </Switch>\n            </div>\n        </form>\n      </div>\n    );\n})\n\n\n\n\nexport default SignUpForm;","import React, {useState} from 'react';\nimport {\n  Link,\n  Route,\n  Switch,\n} from 'react-router-dom';\nimport 'rc-slider/assets/index.css';\nimport { \n    makeNewPost\n} from '../fetch/generalFetch';\nimport ErrorMessage from './Error'\nimport NavBar from './NavBar'\nimport history from './history'\n\nconst loginStyle = {\n    alignContent: 'center',\n    alignItems: 'center',\n    margin: 5,\n    padding: 5,\n    backgroundColor: \"cornsilk\",\n    alignSelf: 'center',\n    display:'flex',\n}\n\nasync function submitLogin(postUrl, email, password) {\n    console.log(\"patchjournal...\",email, password)\n    const loginDetails = {\n        email: email,\n        password: password\n    }\n    const login = await makeNewPost(postUrl, loginDetails)\n    console.log(login)\n    return login\n}\n\nconst LoginForm = React.memo(({baseUrl, url, setLoggedIn}) => {\n    const [email, setEmail] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [displayError, setDisplayError] = useState(\"none\")\n    const [error, setError] = useState(\"\")\n    async function login() {\n      const user = await submitLogin(url, email, password)\n        console.log(\"user:\")\n        console.log(user)\n        // invalid login details\n        if (user && user.msg) {\n            console.log(\"login failed\")\n            setDisplayError(\"block\")\n            setError(user.msg)\n            return false\n        }\n        if (user && user[\"authToken\"] && user[\"refreshToken\"]) {\n            setDisplayError(\"none\")\n            setError(\"\")\n            setLoggedIn(true)\n            sessionStorage.setItem('authToken', user[\"authToken\"])\n            sessionStorage.setItem('refreshToken', user[\"refreshToken\"])\n            return true\n        }\n        setDisplayError(\"block\")\n        setError(\"Unknown error occurred\")\n        return false\n    }\n    return (\n      <div style={loginStyle}>\n        <form>\n          <p>Email: \n          <input \n            type=\"text\"\n            onChange={(e) => {\n                setEmail(e.target.value)\n            }}\n          />\n          </p>\n          <p>Password: \n          <input \n            type=\"password\"\n            onChange={(e) => {\n                setPassword(e.target.value)\n            }}\n          />\n          </p>\n          <ErrorMessage display={displayError} msg={error}/>\n          <div>\n          <Switch>\n            <Link to={{pathname: '/home'}}>\n            <button \n              onClick={async (e) => {\n                console.log(\"button clicked\")\n                e.preventDefault()\n                const loggedIn = await login()\n                console.log(\"loggin:\", loggedIn)\n                if (!loggedIn) {\n                    console.log(\"not loggedin...\", loggedIn)\n                    return\n                }\n                console.log(\"going home\")\n                setLoggedIn(true)\n                history.push('/home')\n                console.log(\"loggedin\". loggedIn)\n            }}\n            > \n              Login\n            </button>\n            </Link>{' '}\n              <Route exact path=\"/home\" component={() => <NavBar url={baseUrl}/>}/>\n          </Switch>\n          </div>\n        </form>\n      </div>\n    );\n})\n\n\n\n\nexport default LoginForm;","import React, {useState} from 'react';\nimport background from './assets/StartingBackground.png';\nimport LoginHome from './components/LoginHome'\nimport { HashRouter, Switch, Route } from 'react-router-dom';\nimport SignUpForm from './components/Signup'\nimport LoginForm from './components/Login'\nimport NavBar from './components/NavBar'\n\nconst url = process.env.REACT_APP_API_URL || \"http://localhost:5000/api/\"\n\nconst style = {  \n  backgroundImage: \"url(\" + background + \")\",\n  backgroundPosition: 'center',\n  backgroundSize: 'cover',\n  backgroundRepeat: 'no-repeat',\n  height: '100%',\n  width: '100%',\n  position: 'absolute',\n  padding: 10,\n  display: 'flex',\n  flexDirection:'column',\n  opacity: 0.8,\n  overflow: 'scroll'\n}\n\nconst header_style = {\n  alignContent:'center',\n  alignItems: 'center',\n  display:'flex',\n  flexDirection:'column'\n}\n\nconst columnStyle = {\n    display: 'flex',\n    flexDirection:'column'\n}\n\nconst unauthorisedStyle = (loggedIn) => {\n    var display = \"block\"\n    if (loggedIn === true) {\n        display = \"none\"\n    }\n    return {\n        display: display,\n    }\n}\n\nconst authorisedStyle = (loggedIn) => {\n  var display = \"none\"\n  if (loggedIn === true) {\n      display = \"block\"\n  }\n  return {\n      display: display,\n  }\n}\n\nfunction App() {\n  const [loggedIn, setLoggedIn] = useState(false)\n  const pathname='/home'\n  return (\n    <div style={style}>\n      <h1 style={header_style}>My Secret Garden</h1>\n      <div>\n      <HashRouter>\n        <div style={unauthorisedStyle(loggedIn)}>\n          <LoginHome url={url} loggedInPath=\"/home/pet\"/>\n        </div>\n        <div style={authorisedStyle(loggedIn)}>\n          <NavBar url={url} pathname={pathname} setLoggedIn={setLoggedIn} loggedIn={loggedIn}/>\n        </div>\n        <div style={columnStyle}>\n          <Switch>\n            <Route path=\"/login\" component={() => <LoginForm url={url+\"user/login\"} setLoggedIn={setLoggedIn}/>}/>\n            <Route path=\"/signup\"component={() => <SignUpForm url={url+\"user/signup\"} setLoggedIn={setLoggedIn}/>}/>\n            <Route path=\"/home\" component={null}/>\n          </Switch>\n        </div>\n      </HashRouter>\n      </div>\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}